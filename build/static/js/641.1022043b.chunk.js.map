{"version":3,"file":"static/js/641.1022043b.chunk.js","mappings":"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","sources":["components/PageHeader.jsx","components/elements/BasicButton.jsx","layouts/ContentLayouts/ContentLayoutWithSidebar/index.js","pages/Proxylist.js","../node_modules/@heroicons/react/solid/esm/ChevronLeftIcon.js","../node_modules/@heroicons/react/solid/esm/ChevronRightIcon.js","../node_modules/@heroicons/react/solid/esm/HomeIcon.js"],"sourcesContent":["import React from \"react\";\nimport {ChevronLeftIcon, ChevronRightIcon, HomeIcon} from \"@heroicons/react/solid\";\nimport {Link} from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n/** Заголовок содержимого страницы, \"хлебные крошки\"\n * @param pages - объект для навигации:\n * {name: пункт навигации, href: ссылка на элемент, current: флаг текущей страницы (bool)}\n * @param classname - доп. класс/ы\n * @param header - заголовок\n * @param children - содержимое правой части заголовка (кнопки и т.д.)\n * @returns {JSX.Element}\n * @constructor\n */\nconst PageHeader = ({pages, classname, header, children}) => {\n\n    return (\n        <div className={classname}>\n            <nav className=\"sm:hidden\" aria-label=\"Назад\">\n                <Link\n                    to={-1}\n                    className=\"flex items-center text-sm font-medium text-gray-500 hover:text-gray-700\"\n                >\n                    <ChevronLeftIcon className=\"flex-shrink-0 -ml-1 mr-1 h-5 w-5 text-gray-400\"/>\n                    Назад\n                </Link>\n            </nav>\n            <nav className={classNames(\"w-full hidden sm:flex\")} aria-label=\"Навигация\">\n                <ol className=\"flex items-center space-x-4\">\n                    <li>\n                        <div>\n                            <Link\n                                to=\"/home\"\n                                className=\"text-gray-400 hover:text-gray-500\"\n                                title=\"Главная\"\n                            >\n                                <HomeIcon className=\"flex-shrink-0 h-5 w-5\" aria-hidden=\"true\"/>\n                                <span className=\"sr-only\" title=\"Главная\">Главная</span>\n                            </Link>\n                        </div>\n                    </li>\n                    {pages.map((page) => (\n                        <li key={page.name}>\n                            <div className=\"flex items-center\">\n                                <ChevronRightIcon className=\"flex-shrink-0 h-5 w-5 text-gray-400\" aria-hidden=\"true\"/>\n                                <Link\n                                    to={page.href}\n                                    className=\"ml-4 text-sm font-medium text-gray-500 hover:text-gray-700\"\n                                    aria-current={\n                                        page.current\n                                            ? \"page\"\n                                            : undefined\n                                    }\n                                >\n                                    {page.name}\n                                </Link>\n                            </div>\n                        </li>\n                    ))}\n                </ol>\n            </nav>\n            {header || children\n                ? <div\n                    className={classNames(\"mt-2 md:flex md:items-center\", header ? \"md:justify-between\" : \"md:justify-end\")}>\n                    {header\n                        ? <div className=\"flex-1 min-w-0\">\n                            <h2 className=\"text-xl font-bold leading-7 text-gray-700 dark:text-gray-200 sm:text-2xl sm:truncate\">\n                                {header}\n                            </h2>\n                        </div>\n                        : \"\"}\n                    <div className=\"mt-4 justify-end flex-shrink-0 flex md:mt-0 md:ml-4\">\n                        {children}\n                    </div>\n                </div>\n                : \"\"}\n        </div>\n    )\n};\n\nexport default PageHeader;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\n/** Простая кнопка, адаптирована под темную тему\n * @param size - размер\n * @param label - лейбл кнопки\n * @param onClick - обработчик клика\n * @param type - тип\n * @param className\n * @param children\n * @param props - доп. пропсы\n * @returns {JSX.Element}\n * @constructor\n */\nconst BasicButton = ({size, label, onClick, type, className, children, ...props}) => {\n\n    const sizes = {\n        \"small\": \"px-3 py-1.5 text-xs\",\n        \"medium\": \"px-4 py-2 text-sm\",\n        \"large\": \"px-6 py-3 text-base\"\n    }\n\n    return (\n        <button\n            type={type}\n            onClick={onClick}\n            className={classNames(\"inline-flex items-center justify-center bg-white dark:bg-gray-900 border border-gray-300 rounded-md shadow-sm leading-4 font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500 dark:border-gray-600 dark:hover:bg-gray-700\", sizes[size], className)}\n            {...props}\n        >\n            {children}\n            {label}\n        </button>\n    )\n};\n\n/** Типы свойств */\nBasicButton.propTypes = {\n    /** Размер кнопки */\n    size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]).isRequired,\n    /** Лейбл (надпись) кнопки */\n    label: PropTypes.string.isRequired,\n    /** Доп. класс */\n    className: PropTypes.string,\n    /** Тип кнопки */\n    type: PropTypes.oneOf([\"button\", \"submit\", \"reset\"]),\n    /** Обработчик клика */\n    onClick: PropTypes.func,\n};\n\n/** Дефолтные свойства */\nBasicButton.defaultProps = {\n    size: \"medium\",\n    type: \"button\",\n    className: \"\",\n    label: \"button\",\n    onClick: undefined,\n};\n\nexport default BasicButton;","import React, {Fragment, useContext, useState} from \"react\";\nimport {Dialog, Transition} from \"@headlessui/react\";\nimport {MenuIcon, XIcon} from \"@heroicons/react/outline\";\nimport {Helmet} from \"react-helmet\";\nimport config from \"../../../config\";\nimport PageHeader from \"../../../components/PageHeader\";\n\n/** Контекст для передачи в дочерние компоненты\n * @type {React.Context<null>} */\nconst ContextContainer = React.createContext(null);\n\n/* Пример использования\n<ContentLayoutWithSidebar boxed={true}>\n    <ContentLayoutWithSidebar.Sidebar>\n    <Содержимое меню>\n    </ContentLayoutWithSidebar.Sidebar>\n    <ContentLayoutWithSidebar.Body>\n    <Содержимое страницы>\n    </ContentLayoutWithSidebar.Body>\n</ContentLayoutWithSidebar>\n*/\n\n/** Раскладка содержимого с сайдбаром\n * @param children\n * @param boxed - (bool) узкое содержимое / на всю ширину\n * @param title\n * @param breadcrumbs\n * @param header\n * @param sidebarSize\n * @param fullHeight\n * @returns {JSX.Element}\n * @constructor */\nexport default function ContentLayoutWithSidebar({\n                                                     children,\n                                                     boxed,\n                                                     title,\n                                                     breadcrumbs,\n                                                     header,\n                                                     sidebarSize,\n                                                     fullHeight\n                                                 }) {\n\n    /** Стейт сайдбара */\n    const [sidebarOpen, setSidebarOpen] = useState(false);\n\n    return (\n        <Fragment>\n            {/* Контекст для передачи в дочерние элементы */}\n            <ContextContainer.Provider value={{sidebarOpen, setSidebarOpen, boxed, header, sidebarSize}}>\n                <Helmet>\n                    <title>{config.APP_NAME} - {title}</title>\n                </Helmet>\n                <div className={fullHeight ? \"h-full\" : \"min-h-full\"}>\n                    <PageHeader pages={breadcrumbs} classname=\"breadcrumbs p-4 pb-4 xl:pb-0\">\n                        {/* Сюда можно тоже вставить разметку, например, кнопки */}\n                    </PageHeader>\n                    <div\n                        className={[\"main-content min-h-full flex overflow-y-auto relative p-4 pt-0 xl:pt-4 rounded-lg\", boxed ? \"max-w-7xl mx-auto\" : \"\"].join(\" \")}>\n                        {/* Доочерние компоненты */}\n                        {children}\n                    </div>\n                </div>\n            </ContextContainer.Provider>\n        </Fragment>\n    )\n}\n\n/** Отрисовщик содержимого\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nconst Body = (props) => {\n    const {setSidebarOpen} = useContext(ContextContainer);\n    return (\n        <>\n            <div className=\"flex flex-col flex-1 overflow-hidden\">\n                <div className=\"flex flex-col flex-1\">\n                    <div className=\"z-10 lg:hidden p-1 bg-gray-100 dark:bg-gray-800\">\n                        <button\n                            type=\"button\"\n                            className=\"-ml-0.5 -mt-0.5 h-12 w-12 inline-flex items-center justify-center rounded-md text-gray-500 hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\"\n                            onClick={() => setSidebarOpen(true)}\n                        >\n                            <span className=\"sr-only\">Открыть меню</span>\n                            <MenuIcon className=\"h-6 w-6\" aria-hidden=\"true\"/>\n                        </button>\n                    </div>\n                    <div\n                        className=\"flex-1 z-0 border border-gray-200 dark:border-gray-600 rounded-lg lg:rounded-l-none lg:border-l-0 bg-white dark:bg-gray-900\">\n                        {props.children}\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\n/** Отрисовщик сайдбара\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nconst Sidebar = (props) => {\n    const {sidebarOpen, setSidebarOpen, boxed, header, sidebarSize} = useContext(ContextContainer);\n\n    const sidebarSizes = {\n        small: {\n            mobile: \"max-w-xs\",\n            desktop: \"lg:w-60\"\n        },\n        medium: {\n            mobile: \"max-w-sm\",\n            desktop: \"lg:w-72\"\n        },\n        large: {\n            mobile: \"max-w-md\",\n            desktop: \"lg:w-96\"\n        }\n    }\n\n    return (\n        <>\n            {/** Мобильное меню */}\n            <Transition.Root show={sidebarOpen} as={Fragment}>\n                <Dialog as=\"div\" className=\"fixed top-16 left-0 bottom-0 right-0 flex z-40 xl:hidden\"\n                        onClose={setSidebarOpen}>\n                    <Transition.Child\n                        as={Fragment}\n                        enter=\"transition-opacity ease-linear duration-300\"\n                        enterFrom=\"opacity-0\"\n                        enterTo=\"opacity-100\"\n                        leave=\"transition-opacity ease-linear duration-300\"\n                        leaveFrom=\"opacity-100\"\n                        leaveTo=\"opacity-0\"\n                    >\n                        <Dialog.Overlay className=\"bg-gray-600 bg-opacity-75\"/>\n                    </Transition.Child>\n                    <Transition.Child\n                        as={Fragment}\n                        enter=\"transition ease-in-out duration-300 transform\"\n                        enterFrom=\"-translate-x-full\"\n                        enterTo=\"translate-x-0\"\n                        leave=\"transition ease-in-out duration-300 transform\"\n                        leaveFrom=\"translate-x-0\"\n                        leaveTo=\"-translate-x-full\"\n                    >\n                        <div\n                            className={[\"relative flex-1 flex flex-col w-full bg-white dark:bg-gray-900 border-r border-gray-200 dark:border-gray-700 shadow-lg\", sidebarSizes[sidebarSize].mobile].join(\" \")}>\n                            <Transition.Child\n                                as={Fragment}\n                                enter=\"ease-in-out duration-300\"\n                                enterFrom=\"opacity-0\"\n                                enterTo=\"opacity-100\"\n                                leave=\"ease-in-out duration-300\"\n                                leaveFrom=\"opacity-100\"\n                                leaveTo=\"opacity-0\"\n                            >\n                                <div className=\"absolute top-0 right-0 -mr-12 pt-2\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"ml-1 flex items-center justify-center h-10 w-10 rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\"\n                                        onClick={() => setSidebarOpen(false)}\n                                    >\n                                        <span className=\"sr-only\">Закрыть меню</span>\n                                        <XIcon className=\"h-6 w-6 text-gray-700 dark:text-gray-200\" aria-hidden=\"true\"/>\n                                    </button>\n                                </div>\n                            </Transition.Child>\n                            <div className=\"flex-1 overflow-y-auto\">\n                                {header\n                                    ? <div className=\"p-4\">\n                                        <h2 className=\"text-xl font-bold leading-7 text-gray-700 dark:text-gray-200 sm:text-2xl sm:truncate\">\n                                            {header}\n                                        </h2>\n                                    </div>\n                                    : null}\n                                {props.children}\n                            </div>\n                        </div>\n                    </Transition.Child>\n                    <div\n                        className=\"flex-shrink-0 w-14\">{/** Заглушка, не позволяющая меню схлопываться, чтобы вместить кнопку меню */}</div>\n                </Dialog>\n            </Transition.Root>\n\n            {/** Десктопное меню */}\n            <div className={[\"hidden lg:flex lg:flex-col\", sidebarSizes[sidebarSize].desktop].join(\" \")}>\n                <div\n                    className={[\"flex-1 flex flex-col min-h-0 border-t border-b border-r border-gray-200 dark:border-gray-600 bg-gray-50 dark:bg-gray-800 border-l rounded-l-lg\", boxed ? \"\" : \"\"].join(\" \")}>\n                    <div className=\"flex-1 flex flex-col\">\n                        {header\n                            ? <div className=\"p-4\">\n                                <h2 className=\"text-xl font-bold leading-7 text-gray-700 dark:text-gray-200 sm:text-2xl sm:truncate\">\n                                    {header}\n                                </h2>\n                            </div>\n                            : null}\n                        {props.children}\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\n/** Компонент меню/сайдбара, в разметке первый\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nContentLayoutWithSidebar.Sidebar = (props) => Sidebar(props);\n\n/** Компонент содержимого страницы\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nContentLayoutWithSidebar.Body = (props) => Body(props);\n","import ContentLayoutWithSidebar from \"../layouts/ContentLayouts/ContentLayoutWithSidebar\";\nimport React, {useEffect, useState} from \"react\";\nimport {proxyListGroups, proxyListLinks} from \"../@mock/SampleData\";\nimport {makeArrayFromObj} from \"../utils\";\nimport BasicButton from \"../components/elements/BasicButton\";\nimport {Menu} from \"@headlessui/react\";\nimport {useSelector} from \"react-redux\";\n\nconst breadcrumbs = [{name: \"Каталог ссылок\", href: \"#\", current: true}];\n\nconst Proxylist = () => {\n    const userdataStore = useSelector((state) => state.userData);\n    const loginData = userdataStore.userData;\n\n    const [selectedGroup, setSelectedGroup] = useState(null);\n    const [groupsList, setGroupsList] = useState({});\n\n    const groupClick = (event, key) => {\n        event.preventDefault();\n        setSelectedGroup(key)\n    }\n\n    useEffect(() => {\n        setGroupsList(proxyListGroups);\n    }, [])\n\n    return (\n        <ContentLayoutWithSidebar\n            boxed={true}\n            title=\"Каталог ссылок\"\n            breadcrumbs={breadcrumbs}\n            header=\"Каталог ссылок\"\n            sidebarSize=\"large\"\n            fullHeight={true}\n        >\n            <ContentLayoutWithSidebar.Sidebar>\n                <div className=\"p-4 pt-0.5\">\n                    <div className=\"grid grid-cols-1 gap-2\">\n                        {makeArrayFromObj(groupsList).map((group, key) => {\n                            return (\n                                <div key={group.id} className=\"flex items-center w-full flex-shrink-0\">\n                                    <div\n                                        onClick={event => groupClick(event, key)}\n                                        className={[\"flex-grow rounded-lg border border-gray-300 dark:border-gray-700 bg-white hover:cursor-pointer dark:bg-gray-900 p-3 shadow-sm flex items-center space-x-3 hover:border-gray-400 dark:hover:border-gray-600\", key === selectedGroup ? \"ring-2 ring-indigo-500 bg-gray-200 border-gray-400\" : \"\"].join(\" \")}>\n                                        <div className=\"flex-shrink-0\">\n                                        <span\n                                            className=\"inline-flex items-center justify-center rounded-full h-8 w-8 bg-indigo-500/30\">\n                                            <span\n                                                className=\"font-medium leading-none text-sm text-indigo-700 dark:text-indigo-300\">\n                                                {group.id}\n                                            </span>\n                                        </span>\n                                        </div>\n                                        <div className=\"flex min-w-0\">\n                                            <a href=\"/\"\n                                                className=\"focus:outline-none\"\n                                            >\n                                                <span className=\"text-sm font-medium text-gray-800 dark:text-gray-200\">\n                                                    {group.name}\n                                                </span>\n                                            </a>\n\n                                        </div>\n                                    </div>\n                                    {loginData.sudo === 1\n                                        ? <Menu as=\"div\" className=\"relative\">\n                                            <Menu.Button>\n                                                <div className=\"flex-shrink-0 px-2\">\n                                                    <div className=\"w-8 h-8 bg-white dark:bg-gray-800 inline-flex items-center justify-center text-gray-400 rounded-full bg-transparent hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                                                        <span className=\"sr-only\">Open options</span>\n                                                        <svg className=\"w-5 h-5\"\n                                                             xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"\n                                                             fill=\"currentColor\" aria-hidden=\"true\">\n                                                            <path\n                                                                d=\"M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z\"/>\n                                                        </svg>\n                                                    </div>\n                                                </div>\n                                            </Menu.Button>\n                                            <Menu.Items\n                                                className=\"absolute right-0 z-50 mt-2 w-40 origin-top-right divide-y divide-gray-100 dark:divide-gray-700 rounded-md bg-white dark:bg-gray-900 shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\">\n                                                <div className=\"px-1 py-1 \">\n                                                    <Menu.Item>\n                                                        {({active}) => (\n                                                            <button\n                                                                className={`${\n                                                                    active ? \"bg-indigo-500 text-white\" : \"text-gray-900 dark:text-gray-100\"\n                                                                } group flex w-full items-center rounded-md px-2 py-2 text-sm`}\n                                                            >\n                                                                Редактировать\n                                                            </button>\n                                                        )}\n                                                    </Menu.Item>\n                                                </div>\n                                                <div className=\"px-1 py-1\">\n                                                    <Menu.Item>\n                                                        {({active}) => (\n                                                            <button\n                                                                className={`${\n                                                                    active ? \"bg-indigo-500 text-white\" : \"text-gray-900 dark:text-gray-100\"\n                                                                } group flex w-full items-center rounded-md px-2 py-2 text-sm`}\n                                                            >\n                                                                Удалить\n                                                            </button>\n                                                        )}\n                                                    </Menu.Item>\n                                                </div>\n                                            </Menu.Items>\n                                        </Menu>\n                                        : null}\n                                </div>\n                            )\n                        })}\n                    </div>\n                </div>\n            </ContentLayoutWithSidebar.Sidebar>\n            <ContentLayoutWithSidebar.Body>\n                <div className=\"p-4 h-full\">\n                    <div className=\"mb-4 h-8\">\n                        {loginData.sudo === 1\n                            ? <>\n                                <BasicButton size=\"medium\" label=\"Добавить группу\" type=\"button\" className=\"mr-3\"/>\n                                <BasicButton size=\"medium\" label=\"Добавить ссылку\" type=\"button\"/>\n                            </>\n                            : null}\n                    </div>\n                    <div className={[selectedGroup != null ? \"\" : \"h-full\", \"grid grid-cols-1 gap-2\"].join(\" \")}>\n                        {selectedGroup != null\n                            ? makeArrayFromObj(proxyListLinks[selectedGroup].children).map((link) => {\n                                return (\n                                    <div key={link.id} className=\"w-full flex flex-shrink-0 items-center\">\n                                    <a\n                                        href={link.link}\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\"\n                                        className=\"flex items-center flex-grow\">\n                                        <div\n                                            className={[\"rounded-lg flex-grow border border-gray-300 dark:border-gray-700 bg-white dark:bg-gray-900 p-3 shadow-sm flex items-center space-x-3 hover:border-gray-400 dark:hover:border-gray-600\"].join(\" \")}>\n                                            <div className=\"flex-shrink-0\">\n                                        <span\n                                            className=\"inline-flex items-center justify-center rounded-full h-8 w-8 bg-indigo-500/30\">\n                                            <span\n                                                className=\"font-medium leading-none text-sm text-indigo-700 dark:text-indigo-300\">\n                                                {link.id}\n                                            </span>\n                                        </span>\n                                            </div>\n                                            <div className=\"flex-1 min-w-0\">\n                                                <p\n                                                    className=\"focus:outline-none\"\n                                                >\n                                                    <span className=\"text-sm font-medium text-gray-800 dark:text-gray-200\">\n                                                        {link.name}\n                                                    </span>\n                                                </p>\n                                            </div>\n                                        </div>\n                                    </a>\n                                {loginData.sudo === 1\n                                    ? <Menu as=\"div\" className=\"relative\">\n                                        <Menu.Button>\n                                            <div className=\"flex-shrink-0 px-2\">\n                                                <div\n                                                    className=\"w-8 h-8 bg-white dark:bg-gray-900 inline-flex items-center justify-center text-gray-400 rounded-full bg-transparent hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n                                                    <span className=\"sr-only\">Open options</span>\n                                                    <svg className=\"w-5 h-5\"\n                                                         xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\"\n                                                         fill=\"currentColor\" aria-hidden=\"true\">\n                                                        <path\n                                                            d=\"M10 6a2 2 0 110-4 2 2 0 010 4zM10 12a2 2 0 110-4 2 2 0 010 4zM10 18a2 2 0 110-4 2 2 0 010 4z\"/>\n                                                    </svg>\n                                                </div>\n                                            </div>\n                                        </Menu.Button>\n                                        <Menu.Items\n                                            className=\"absolute right-0 z-50 mt-2 w-40 origin-top-right divide-y divide-gray-100 dark:divide-gray-700 rounded-md bg-white dark:bg-gray-900 shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\">\n                                            <div className=\"px-1 py-1 \">\n                                                <Menu.Item>\n                                                    {({active}) => (\n                                                        <button\n                                                            className={`${\n                                                                active ? \"bg-indigo-500 text-white\" : \"text-gray-900 dark:text-gray-100\"\n                                                            } group flex w-full items-center rounded-md px-2 py-2 text-sm`}\n                                                        >\n                                                            Редактировать\n                                                        </button>\n                                                    )}\n                                                </Menu.Item>\n                                            </div>\n                                            <div className=\"px-1 py-1\">\n                                                <Menu.Item>\n                                                    {({active}) => (\n                                                        <button\n                                                            className={`${\n                                                                active ? \"bg-indigo-500 text-white\" : \"text-gray-900 dark:text-gray-100\"\n                                                            } group flex w-full items-center rounded-md px-2 py-2 text-sm`}\n                                                        >\n                                                            Удалить\n                                                        </button>\n                                                    )}\n                                                </Menu.Item>\n                                            </div>\n                                        </Menu.Items>\n                                    </Menu>\n                                    : null}\n                                    </div>\n                                )\n                            })\n                            : (\n                                <div className=\"text-center flex flex-col items-center justify-center\">\n                                    <div className=\"mt-1 border-2 border-gray-300 dark:border-gray-700 border-dashed rounded-md px-6 pt-5 pb-6 flex flex-col items-center justify-center\">\n                                        <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\"\n                                             stroke=\"currentColor\" aria-hidden=\"true\">\n                                            <path vectorEffect=\"non-scaling-stroke\" strokeLinecap=\"round\"\n                                                  strokeLinejoin=\"round\" strokeWidth=\"2\"\n                                                  d=\"M9 13h6m-3-3v6m-9 1V7a2 2 0 012-2h6l2 2h6a2 2 0 012 2v8a2 2 0 01-2 2H5a2 2 0 01-2-2z\"/>\n                                        </svg>\n                                        <h3 className=\"mt-2 text-sm font-medium text-gray-900 dark:text-gray-100\">Нет элементов</h3>\n                                        <p className=\"mt-1 text-sm text-gray-500\">\n                                            Выберите группу в списке слева.\n                                        </p>\n                                    </div>\n                                </div>\n                            )\n                        }\n                    </div>\n                </div>\n            </ContentLayoutWithSidebar.Body>\n\n        </ContentLayoutWithSidebar>\n    );\n};\n\nexport default Proxylist;","import * as React from \"react\";\n\nfunction ChevronLeftIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(ChevronLeftIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction ChevronRightIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(ChevronRightIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction HomeIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(HomeIcon);\nexport default ForwardRef;"],"names":["pages","classname","header","children","className","to","classNames","title","map","page","href","current","undefined","name","BasicButton","size","label","onClick","type","props","defaultProps","ContextContainer","React","ContentLayoutWithSidebar","boxed","breadcrumbs","sidebarSize","fullHeight","useState","sidebarOpen","setSidebarOpen","Fragment","Provider","value","config","join","Sidebar","useContext","sidebarSizes","small","mobile","desktop","medium","large","show","as","onClose","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Body","loginData","useSelector","state","userData","selectedGroup","setSelectedGroup","groupsList","setGroupsList","useEffect","proxyListGroups","makeArrayFromObj","group","key","event","preventDefault","groupClick","id","sudo","xmlns","viewBox","fill","d","active","proxyListLinks","link","target","rel","stroke","vectorEffect","strokeLinecap","strokeLinejoin","strokeWidth","ForwardRef","svgRef","Object","assign","ref","fillRule","clipRule"],"sourceRoot":""}