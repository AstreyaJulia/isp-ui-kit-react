{"version":3,"file":"static/js/86.b7c20f28.chunk.js","mappings":"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","sources":["components/PageHeader.jsx","components/elements/BasicButton.jsx","components/elements/CardHeader.jsx","components/elements/DangerButton.jsx","components/elements/PrimaryButton.jsx","layouts/ContentLayouts/ContentLayoutWithSidebar/index.js","pages/apps/calendar/index.js","components/elements/Checkbox.jsx","components/elements/Dot.jsx","pages/apps/calendar/Sidebar.js","pages/apps/calendar/AddEventSidebar.js","pages/apps/Calendar.js"],"sourcesContent":["import React from \"react\";\nimport {ChevronLeftIcon, ChevronRightIcon, HomeIcon} from \"@heroicons/react/solid\";\nimport {Link} from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n/** Заголовок содержимого страницы, \"хлебные крошки\"\n * @param pages - объект для навигации:\n * {name: пункт навигации, href: ссылка на элемент, current: флаг текущей страницы (bool)}\n * @param classname - доп. класс/ы\n * @param header - заголовок\n * @param children - содержимое правой части заголовка (кнопки и т.д.)\n * @returns {JSX.Element}\n * @constructor\n */\nconst PageHeader = ({pages, classname, header, children}) => {\n\n    return (\n        <div className={classname}>\n            <nav className=\"sm:hidden\" aria-label=\"Назад\">\n                <Link\n                    to={-1}\n                    className=\"flex items-center text-sm font-medium text-gray-500 hover:text-gray-700\"\n                >\n                    <ChevronLeftIcon className=\"flex-shrink-0 -ml-1 mr-1 h-5 w-5 text-gray-400\"/>\n                    Назад\n                </Link>\n            </nav>\n            <nav className={classNames(\"w-full hidden sm:flex\")} aria-label=\"Навигация\">\n                <ol className=\"flex items-center space-x-4\">\n                    <li>\n                        <div>\n                            <Link\n                                to=\"/home\"\n                                className=\"text-gray-400 hover:text-gray-500\"\n                                title=\"Главная\"\n                            >\n                                <HomeIcon className=\"flex-shrink-0 h-5 w-5\" aria-hidden=\"true\"/>\n                                <span className=\"sr-only\" title=\"Главная\">Главная</span>\n                            </Link>\n                        </div>\n                    </li>\n                    {pages.map((page) => (\n                        <li key={page.name}>\n                            <div className=\"flex items-center\">\n                                <ChevronRightIcon className=\"flex-shrink-0 h-5 w-5 text-gray-400\" aria-hidden=\"true\"/>\n                                <Link\n                                    to={page.href}\n                                    className=\"ml-4 text-sm font-medium text-gray-500 hover:text-gray-700\"\n                                    aria-current={\n                                        page.current\n                                            ? \"page\"\n                                            : undefined\n                                    }\n                                >\n                                    {page.name}\n                                </Link>\n                            </div>\n                        </li>\n                    ))}\n                </ol>\n            </nav>\n            {header || children\n                ? <div\n                    className={classNames(\"mt-2 md:flex md:items-center\", header ? \"md:justify-between\" : \"md:justify-end\")}>\n                    {header\n                        ? <div className=\"flex-1 min-w-0\">\n                            <h2 className=\"text-xl font-bold leading-7 text-gray-700 dark:text-gray-200 sm:text-2xl sm:truncate\">\n                                {header}\n                            </h2>\n                        </div>\n                        : \"\"}\n                    <div className=\"mt-4 justify-end flex-shrink-0 flex md:mt-0 md:ml-4\">\n                        {children}\n                    </div>\n                </div>\n                : \"\"}\n        </div>\n    )\n};\n\nexport default PageHeader;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\n/** Простая кнопка, адаптирована под темную тему\n * @param size - размер\n * @param label - лейбл кнопки\n * @param onClick - обработчик клика\n * @param type - тип\n * @param className\n * @param children\n * @param props - доп. пропсы\n * @returns {JSX.Element}\n * @constructor\n */\nconst BasicButton = ({size, label, onClick, type, className, children, ...props}) => {\n\n    const sizes = {\n        \"small\": \"px-3 py-1.5 text-xs\",\n        \"medium\": \"px-4 py-2 text-sm\",\n        \"large\": \"px-6 py-3 text-base\"\n    }\n\n    return (\n        <button\n            type={type}\n            onClick={onClick}\n            className={classNames(\"inline-flex items-center justify-center bg-white dark:bg-gray-900 border border-gray-300 rounded-md shadow-sm leading-4 font-medium text-gray-700 dark:text-gray-300 hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-indigo-500 dark:border-gray-600 dark:hover:bg-gray-700\", sizes[size], className)}\n            {...props}\n        >\n            {children}\n            {label}\n        </button>\n    )\n};\n\n/** Типы свойств */\nBasicButton.propTypes = {\n    /** Размер кнопки */\n    size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]).isRequired,\n    /** Лейбл (надпись) кнопки */\n    label: PropTypes.string.isRequired,\n    /** Доп. класс */\n    className: PropTypes.string,\n    /** Тип кнопки */\n    type: PropTypes.oneOf([\"button\", \"submit\", \"reset\"]),\n    /** Обработчик клика */\n    onClick: PropTypes.func,\n};\n\n/** Дефолтные свойства */\nBasicButton.defaultProps = {\n    size: \"medium\",\n    type: \"button\",\n    className: \"\",\n    label: \"button\",\n    onClick: undefined,\n};\n\nexport default BasicButton;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\n/** Заголовок карточки\n * @param title - заголовок\n * @param className - доп. класс/ы\n * @param props - доп. пропсы\n * @returns {JSX.Element}\n * @constructor\n */\nconst CardHeader = ({title, className, ...props}) => {\n    return (\n        <h3\n            className={classNames(\"text-base leading-6 font-medium text-gray-600 dark:text-gray-300\", className || \"\")}\n            {...props}\n        >\n            {title}\n        </h3>\n    );\n};\n\nCardHeader.propTypes = {\n    /** Заголовок */\n    title: PropTypes.string.isRequired,\n    /** Класс/ы */\n    className: PropTypes.string\n};\n\nCardHeader.defaultProps = {\n    /** Заголовок */\n    title: \"\",\n    /** Класс/ы */\n    className: PropTypes.string\n};\n\nexport default CardHeader;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\n/** Кнопка, предупреждающая о действии\n * @param size - размер\n * @param label - лейбл кнопки\n * @param onClick - обработчик клика\n * @param type - тип\n * @param className\n * @param props - доп. пропсы\n * @returns {JSX.Element}\n * @constructor\n */\nconst DangerButton = ({size, label, onClick, type, className, ...props}) => {\n    const sizes = {\n        \"small\": \"px-3 py-1.5 text-xs\",\n        \"medium\": \"px-4 py-2 text-sm\",\n        \"large\": \"px-6 py-3 text-base\"\n    }\n    return (\n        <button\n            type={type}\n            onClick={onClick}\n            className={classNames(\"ml-5 bg-white dark:bg-gray-900 border border-gray-300 rounded-md shadow-sm leading-4 font-medium text-red-700 dark:text-red-300 hover:bg-red-300 hover:border-red-400 dark:hover:bg-red-800 focus:outline-none focus:ring-2 focus:ring-red-500 dark:border-gray-600 dark:hover:border-red-600\", sizes[size], className || \"\")}\n            {...props}\n        >\n            {label}\n        </button>\n    );\n};\n\nDangerButton.propTypes = {\n    /** Размер кнопки */\n    size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]).isRequired,\n    /** Лейбл (надпись) кнопки */\n    label: PropTypes.string.isRequired,\n    /** Доп. класс */\n    className: PropTypes.string,\n    /** Тип кнопки */\n    type: PropTypes.oneOf([\"button\", \"submit\", \"reset\"]),\n    /** Обработчик клика */\n    onClick: PropTypes.func,\n};\n\nDangerButton.defaultProps = {\n    size: \"medium\",\n    type: \"button\",\n    className: \"\",\n    label: \"button\",\n    onClick: undefined,\n};\n\nexport default DangerButton;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\n/** Однотонная цветная кнопка, для привлечения внимания\n * @param size - азмер\n * @param label - лейбл кнопки\n * @param onClick - обработчик клика\n * @param type - тип\n * @param className\n * @param children\n * @param props - доп. пропсы\n * @returns {JSX.Element}\n * @constructor\n */\nconst PrimaryButton = ({size, label, onClick, type, className, children, ...props}) => {\n    const sizes = {\n        \"small\": \"px-3 py-1.5 text-xs\",\n        \"medium\": \"px-4 py-2 text-sm\",\n        \"large\": \"px-6 py-3 text-base\"\n    }\n    return (\n        <button\n            type={type}\n            onClick={onClick}\n            className={classNames(\"bg-indigo-600 border border-transparent rounded-md shadow-sm inline-flex items-center justify-center font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500\", sizes[size], className)}\n            {...props}\n        >\n            {children}\n            {label}\n        </button>\n    );\n};\n\nPrimaryButton.propTypes = {\n    /** Размер кнопки */\n    size: PropTypes.oneOf([\"small\", \"medium\", \"large\"]).isRequired,\n    /** Лейбл (надпись) кнопки */\n    label: PropTypes.string.isRequired,\n    /** Доп. класс */\n    className: PropTypes.string,\n    /** Тип кнопки */\n    type: PropTypes.oneOf([\"button\", \"submit\", \"reset\"]),\n    /** Обработчик клика */\n    onClick: PropTypes.func,\n};\n\nPrimaryButton.defaultProps = {\n    size: \"medium\",\n    type: \"button\",\n    className: \"\",\n    label: \"button\",\n    onClick: undefined,\n};\n\nexport default PrimaryButton;","import React, {Fragment, useContext, useState} from \"react\";\nimport {Dialog, Transition} from \"@headlessui/react\";\nimport {MenuIcon, XIcon} from \"@heroicons/react/outline\";\nimport {Helmet} from \"react-helmet\";\nimport config from \"../../../config\";\nimport PageHeader from \"../../../components/PageHeader\";\n\n/** Контекст для передачи в дочерние компоненты\n * @type {React.Context<null>} */\nconst ContextContainer = React.createContext(null);\n\n/* Пример использования\n<ContentLayoutWithSidebar boxed={true}>\n    <ContentLayoutWithSidebar.Sidebar>\n    <Содержимое меню>\n    </ContentLayoutWithSidebar.Sidebar>\n    <ContentLayoutWithSidebar.Body>\n    <Содержимое страницы>\n    </ContentLayoutWithSidebar.Body>\n</ContentLayoutWithSidebar>\n*/\n\n/** Раскладка содержимого с сайдбаром\n * @param children\n * @param boxed - (bool) узкое содержимое / на всю ширину\n * @param title\n * @param breadcrumbs\n * @param header\n * @param sidebarSize\n * @param fullHeight\n * @returns {JSX.Element}\n * @constructor */\nexport default function ContentLayoutWithSidebar({\n                                                     children,\n                                                     boxed,\n                                                     title,\n                                                     breadcrumbs,\n                                                     header,\n                                                     sidebarSize,\n                                                     fullHeight\n                                                 }) {\n\n    /** Стейт сайдбара */\n    const [sidebarOpen, setSidebarOpen] = useState(false);\n\n    return (\n        <Fragment>\n            {/* Контекст для передачи в дочерние элементы */}\n            <ContextContainer.Provider value={{sidebarOpen, setSidebarOpen, boxed, header, sidebarSize}}>\n                <Helmet>\n                    <title>{config.APP_NAME} - {title}</title>\n                </Helmet>\n                <div className={fullHeight ? \"h-full\" : \"min-h-full\"}>\n                    <PageHeader pages={breadcrumbs} classname=\"breadcrumbs p-4 pb-4 xl:pb-0\">\n                        {/* Сюда можно тоже вставить разметку, например, кнопки */}\n                    </PageHeader>\n                    <div\n                        className={[\"main-content min-h-full flex overflow-y-auto relative p-4 pt-0 xl:pt-4 rounded-lg\", boxed ? \"max-w-7xl mx-auto\" : \"\"].join(\" \")}>\n                        {/* Доочерние компоненты */}\n                        {children}\n                    </div>\n                </div>\n            </ContextContainer.Provider>\n        </Fragment>\n    )\n}\n\n/** Отрисовщик содержимого\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nconst Body = (props) => {\n    const {setSidebarOpen} = useContext(ContextContainer);\n    return (\n        <>\n            <div className=\"flex flex-col flex-1 overflow-hidden\">\n                <div className=\"flex flex-col flex-1\">\n                    <div className=\"z-10 lg:hidden p-1 bg-gray-100 dark:bg-gray-800\">\n                        <button\n                            type=\"button\"\n                            className=\"-ml-0.5 -mt-0.5 h-12 w-12 inline-flex items-center justify-center rounded-md text-gray-500 hover:text-gray-900 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\"\n                            onClick={() => setSidebarOpen(true)}\n                        >\n                            <span className=\"sr-only\">Открыть меню</span>\n                            <MenuIcon className=\"h-6 w-6\" aria-hidden=\"true\"/>\n                        </button>\n                    </div>\n                    <div\n                        className=\"flex-1 z-0 border border-gray-200 dark:border-gray-600 rounded-lg lg:rounded-l-none lg:border-l-0 bg-white dark:bg-gray-900\">\n                        {props.children}\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\n/** Отрисовщик сайдбара\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nconst Sidebar = (props) => {\n    const {sidebarOpen, setSidebarOpen, boxed, header, sidebarSize} = useContext(ContextContainer);\n\n    const sidebarSizes = {\n        small: {\n            mobile: \"max-w-xs\",\n            desktop: \"lg:w-60\"\n        },\n        medium: {\n            mobile: \"max-w-sm\",\n            desktop: \"lg:w-72\"\n        },\n        large: {\n            mobile: \"max-w-md\",\n            desktop: \"lg:w-96\"\n        }\n    }\n\n    return (\n        <>\n            {/** Мобильное меню */}\n            <Transition.Root show={sidebarOpen} as={Fragment}>\n                <Dialog as=\"div\" className=\"fixed top-16 left-0 bottom-0 right-0 flex z-40 xl:hidden\"\n                        onClose={setSidebarOpen}>\n                    <Transition.Child\n                        as={Fragment}\n                        enter=\"transition-opacity ease-linear duration-300\"\n                        enterFrom=\"opacity-0\"\n                        enterTo=\"opacity-100\"\n                        leave=\"transition-opacity ease-linear duration-300\"\n                        leaveFrom=\"opacity-100\"\n                        leaveTo=\"opacity-0\"\n                    >\n                        <Dialog.Overlay className=\"bg-gray-600 bg-opacity-75\"/>\n                    </Transition.Child>\n                    <Transition.Child\n                        as={Fragment}\n                        enter=\"transition ease-in-out duration-300 transform\"\n                        enterFrom=\"-translate-x-full\"\n                        enterTo=\"translate-x-0\"\n                        leave=\"transition ease-in-out duration-300 transform\"\n                        leaveFrom=\"translate-x-0\"\n                        leaveTo=\"-translate-x-full\"\n                    >\n                        <div\n                            className={[\"relative flex-1 flex flex-col w-full bg-white dark:bg-gray-900 border-r border-gray-200 dark:border-gray-700 shadow-lg\", sidebarSizes[sidebarSize].mobile].join(\" \")}>\n                            <Transition.Child\n                                as={Fragment}\n                                enter=\"ease-in-out duration-300\"\n                                enterFrom=\"opacity-0\"\n                                enterTo=\"opacity-100\"\n                                leave=\"ease-in-out duration-300\"\n                                leaveFrom=\"opacity-100\"\n                                leaveTo=\"opacity-0\"\n                            >\n                                <div className=\"absolute top-0 right-0 -mr-12 pt-2\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"ml-1 flex items-center justify-center h-10 w-10 rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\"\n                                        onClick={() => setSidebarOpen(false)}\n                                    >\n                                        <span className=\"sr-only\">Закрыть меню</span>\n                                        <XIcon className=\"h-6 w-6 text-gray-700 dark:text-gray-200\" aria-hidden=\"true\"/>\n                                    </button>\n                                </div>\n                            </Transition.Child>\n                            <div className=\"flex-1 overflow-y-auto\">\n                                {header\n                                    ? <div className=\"p-4\">\n                                        <h2 className=\"text-xl font-bold leading-7 text-gray-700 dark:text-gray-200 sm:text-2xl sm:truncate\">\n                                            {header}\n                                        </h2>\n                                    </div>\n                                    : null}\n                                {props.children}\n                            </div>\n                        </div>\n                    </Transition.Child>\n                    <div\n                        className=\"flex-shrink-0 w-14\">{/** Заглушка, не позволяющая меню схлопываться, чтобы вместить кнопку меню */}</div>\n                </Dialog>\n            </Transition.Root>\n\n            {/** Десктопное меню */}\n            <div className={[\"hidden lg:flex lg:flex-col\", sidebarSizes[sidebarSize].desktop].join(\" \")}>\n                <div\n                    className={[\"flex-1 flex flex-col min-h-0 border-t border-b border-r border-gray-200 dark:border-gray-600 bg-gray-50 dark:bg-gray-800 border-l rounded-l-lg\", boxed ? \"\" : \"\"].join(\" \")}>\n                    <div className=\"flex-1 flex flex-col\">\n                        {header\n                            ? <div className=\"p-4\">\n                                <h2 className=\"text-xl font-bold leading-7 text-gray-700 dark:text-gray-200 sm:text-2xl sm:truncate\">\n                                    {header}\n                                </h2>\n                            </div>\n                            : null}\n                        {props.children}\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\n/** Компонент меню/сайдбара, в разметке первый\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nContentLayoutWithSidebar.Sidebar = (props) => Sidebar(props);\n\n/** Компонент содержимого страницы\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nContentLayoutWithSidebar.Body = (props) => Body(props);\n","import React, {memo, useEffect, useRef} from \"react\";\nimport FullCalendar from \"@fullcalendar/react\";\nimport listPlugin from \"@fullcalendar/list\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport ruLocale from \"@fullcalendar/core/locales/ru\";\nimport {events} from \"../../../@mock/SampleData\";\n\nconst CalendarModule = props => {\n    const calendarRef = useRef(null);\n\n    const {\n        store,\n        dispatch,\n        calendarApi,\n        setCalendarApi,\n        handleAddEventSidebar,\n        blankEvent,\n        selectEvent,\n    } = props;\n\n    useEffect(() => {\n        if (calendarApi === null) {\n            setCalendarApi(calendarRef.current.getApi())\n        }\n        // eslint-disable-next-line\n    }, [calendarApi])\n\n    const calendarOptions = {\n        events: store.events.length ? store.events : events,\n        plugins: [interactionPlugin, dayGridPlugin, timeGridPlugin, listPlugin],\n        initialView: \"dayGridMonth\",\n        headerToolbar: {\n            start: \"dayGridMonth,timeGridWeek,timeGridDay today\",\n            end: \"prev,title,next\"\n        },\n        editable: true,\n        eventResizableFromStart: false,\n        dragScroll: false,\n        dayMaxEvents: true,\n        navLinks: true,\n        locale: ruLocale,\n\n        eventClassNames({event: calendarEvent}) {\n            const colorName = calendarEvent._def.extendedProps.calendar\n\n            return [\n                // Фоновый цвет событий\n                `fc-event-${colorName}`\n            ]\n        },\n\n        eventClick({event: clickedEvent}) {\n            if (clickedEvent._def.ui.display !== \"background\") {\n                dispatch(selectEvent(clickedEvent));\n                handleAddEventSidebar();\n            }\n        },\n\n        dateClick(info) {\n            const ev = blankEvent;\n            ev.start = info.date;\n            ev.end = info.date;\n            dispatch(selectEvent(ev));\n            handleAddEventSidebar();\n        },\n\n        ref: calendarRef\n    }\n\n    return (\n        <div className=\"calendar-module p-4\">\n            <FullCalendar {...calendarOptions} />\n        </div>\n    )\n}\n\nexport default memo(CalendarModule)\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Checkbox = ({className, id, size, color, label, description, onChange, checked, children}) => {\n\n    const checkboxSize = {\n        4: {container: \"h-5\", checkbox: \"h-4 w-4\"},\n        6: {container: \"h-7\", checkbox: \"h-6 w-6\"},\n        8: {container: \"h-9\", checkbox: \"h-8 w-8\"},\n        10: {container: \"h-11\", checkbox: \"h-10 w-10\"},\n        12: {container: \"h-13\", checkbox: \"h-12 w-12\"}\n    };\n\n    const checkboxColor = {\n        red: \"focus:ring-red-500 text-red-600\",\n        orange: \"focus:ring-orange-500 text-orange-600\",\n        yellow: \"focus:ring-yellow-500 text-yellow-600\",\n        green: \"focus:ring-green-500 text-green-600\",\n        cyan: \"focus:ring-cyan-500 text-cyan-600\",\n        blue: \"focus:ring-blue-500 text-blue-600\",\n        indigo: \"focus:ring-indigo-500 text-indigo-600\",\n        pink: \"focus:ring-pink-500 text-pink-600\",\n        gray: \"focus:ring-gray-500 text-gray-600\",\n        sky: \"focus:ring-sky-500 text-sky-600\",\n        teal: \"focus:ring-teal-500 text-teal-600\"\n    }\n\n    return (\n        <div className={[\"relative flex\", description ? \"items-start\" : \"items-center\", className || \"\"].join(\" \")}>\n            <div className={[\"flex items-center h-5\", checkboxSize[size].container].join(\" \")}>\n                <input\n                    id={id}\n                    aria-describedby={[id, \"-description\"].join(\"\")}\n                    name={id}\n                    type=\"checkbox\"\n                    className={[\"focus:outline-none focus:ring-2 border-gray-300 dark:border-gray-600 rounded\", checkboxSize[size].checkbox, checkboxColor[color]].join(\" \")}\n                    onChange={onChange}\n                    checked={checked}\n                />\n            </div>\n            {label\n                ? <div className={[\"ml-3 text-sm\", description ? \"pt-1\" : \"\"].join(\" \")}>\n                    <label htmlFor={id} className=\"font-medium text-gray-700 dark:text-gray-500 flex items-center\">{children}{label}</label>\n                    {description ?\n                        <p id={[id, \"-description\"].join(\"\")} className=\"text-gray-500 dark:text-gray-400\">{description}</p>\n                        : null}\n                </div>\n                : null}\n        </div>\n    );\n};\n\nCheckbox.propTypes = {\n    /**  ID */\n    id: PropTypes.string.isRequired,\n    /**  Размер чекбокса */\n    size: PropTypes.oneOf([\"4\", \"6\", \"8\", \"10\", \"12\"]).isRequired,\n    /**  Цвет чекбокса */\n    color: PropTypes.oneOf([\"red\", \"orange\", \"yellow\", \"green\", \"cyan\", \"blue\", \"indigo\", \"pink\", \"gray\", \"sky\", \"teal\"]).isRequired,\n    /** Доп. класс/ы для чекбокса */\n    className: PropTypes.string,\n    /** Обработчик смены значения */\n    onChange: PropTypes.func,\n    /** Метка чекбокса */\n    label: PropTypes.string,\n    /** Описание чекбокса */\n    description: PropTypes.string\n};\n\nexport default Checkbox;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n/** Точка (bullet)\n * @param size - размер\n * @param color - цвет\n * @param className - класс\n * @returns {JSX.Element}\n * @constructor\n */\nconst Dot = ({size, color, className}) => {\n\n    const dotSize = {\n        2: \"h-2 w-2\",\n        3: \"h-3 w-3\",\n        4: \"h-4 w-4\",\n        5: \"h-5 w-5\",\n        6: \"h-6 w-6\"\n    }\n\n    const dotColor = {\n        red: \"bg-red-500\",\n        orange: \"bg-orange-500\",\n        yellow: \"bg-yellow-500\",\n        green: \"bg-green-500\",\n        cyan: \"bg-cyan-500\",\n        blue: \"bg-blue-500\",\n        indigo: \"bg-indigo-500\",\n        pink: \"bg-pink-500\",\n        gray: \"bg-gray-500\",\n        sky: \"bg-sky-500\",\n        teal: \"bg-teal-500\"\n    }\n\n    return (\n        <span className={[\"rounded-full\", className || \"\", dotColor[color], dotSize[size]].join(\" \")}/>\n    );\n};\n\nDot.propTypes = {\n    /** Размер точки */\n    size: PropTypes.oneOf([\"2\", \"3\", \"4\", \"5\", \"6\"]).isRequired,\n    /** Цвет */\n    color: PropTypes.oneOf([\"red\", \"orange\", \"yellow\", \"green\", \"cyan\", \"blue\", \"indigo\", \"pink\", \"gray\", \"sky\", \"teal\"]).isRequired,\n    /** Доп. класс для точки */\n    className: PropTypes.string\n};\n\nDot.defaultProps = {\n    size: \"2\",\n    color: \"red\",\n    classname: \"\"\n};\n\nexport default Dot;","import React, {Fragment} from \"react\";\nimport Checkbox from \"../../../components/elements/Checkbox\";\nimport {PlusIcon} from \"@heroicons/react/solid\";\nimport Dot from \"../../../components/elements/Dot\";\nimport BasicButton from \"../../../components/elements/BasicButton\";\nconst filters = [\n    {label: \"События\", color: \"indigo\", className: \"\"},\n    {label: \"Отпуск\", color: \"green\", className: \"\"},\n    {label: \"Дежурство\", color: \"cyan\", className: \"\"},\n    {label: \"Важно\", color: \"yellow\", className: \"\"},\n    {label: \"Праздники\", color: \"red\", className: \"\"},\n    {label: \"Категория 1\", color: \"pink\", className: \"\"},\n    {label: \"Категория 2\", color: \"blue\", className: \"\"},\n    {label: \"Категория 3\", color: \"orange\", className: \"\"},\n    {label: \"Категория 4\", color: \"teal\", className: \"\"}\n];\n\n/** Сайдбар слева календаря\n * @param props - handleAddEventSidebar, toggleSidebar, updateFilter, updateAllFilters, store, dispatch\n * @returns {JSX.Element}\n * @constructor\n */\nconst SidebarLeft = props => {\n    const {handleAddEventSidebar, toggleSidebar, updateFilter, updateAllFilters, store, dispatch} = props;\n\n    /** Хандл клика по событию */\n    const handleAddEventClick = () => {\n        toggleSidebar(false);\n        handleAddEventSidebar();\n    };\n\n    return (\n        <Fragment>\n            <div className=\"sidebar-wrapper\">\n                <BasicButton label=\"Cобытие\" onClick={handleAddEventClick} className=\"w-full mb-6\">\n                    <PlusIcon className=\"w-4 h-4 mr-2\"/>\n                </BasicButton>\n                <p className=\"section-label mb-4\">\n                    <span className=\"font-bold uppercase text-gray-600 dark:text-gray-500 text-sm\">Фильтр</span>\n                </p>\n                <Checkbox\n                    size=\"4\"\n                    id=\"view-all\"\n                    color=\"gray\"\n                    onChange={e => dispatch(updateAllFilters(e.target.checked))}\n                    checked={store.selectedCalendars.length === filters.length}\n                    label=\"Все\"\n                    className=\"select-all mb-3\">\n                    <Dot className=\"mr-2\" color=\"gray\" size=\"4\" />\n                </Checkbox>\n                <div className=\"calendar-events-filter\">\n                    {filters.length &&\n                        filters.map(filter => {\n                            return (\n                                <Checkbox\n                                    key={`${filter.color}-key`}\n                                    size=\"4\"\n                                    id={`${filter.color}-event`}\n                                    color=\"gray\"\n                                    onChange={() => {\n                                        dispatch(updateFilter(filter.color))\n                                    }}\n                                    checked={store.selectedCalendars.includes(filter.color)}\n                                    label={filter.label}\n                                    className={\n                                        [filter.className, \"mb-3\"].join(\" \")}>\n                                    <Dot className=\"mr-2\" color={filter.color} size=\"4\" />\n                                </Checkbox>\n                            )\n                        })}\n                </div>\n            </div>\n            <div className=\"mt-auto\">\n            </div>\n        </Fragment>\n    )\n};\n\nexport default SidebarLeft\n","import React, {Fragment, useEffect, useState} from \"react\";\nimport {Avatar} from \"../../../components/elements/Avatar\";\nimport toast from \"react-hot-toast\";\nimport Flatpickr from \"react-flatpickr\";\nimport Select, {components} from \"react-select\"; // eslint-disable-line\nimport {Controller, useForm} from \"react-hook-form\";\nimport {Form, Input, Label} from \"reactstrap\";\nimport {isObjEmpty} from \"../../../utils\";\nimport PrimaryButton from \"../../../components/elements/PrimaryButton\";\nimport DangerButton from \"../../../components/elements/DangerButton\";\nimport {Dialog, Switch, Transition} from \"@headlessui/react\";\nimport {XIcon} from \"@heroicons/react/outline\";\nimport classNames from \"classnames\";\nimport CardHeader from \"../../../components/elements/CardHeader\";\nimport Dot from \"../../../components/elements/Dot\";\nimport {usersOptions, calendCat} from \"../../../@mock/SampleData\";\n\nconst AddEventSidebar = props => {\n\n    const {\n        open,\n        store,\n        dispatch,\n        addEvent,\n        calendarApi,\n        selectEvent,\n        updateEvent,\n        removeEvent,\n        refetchEvents,\n        calendarsColor,\n        handleAddEventSidebar\n    } = props;\n\n    const selectedEvent = store.selectedEvent,\n        {\n            control,\n            setError,\n            setValue,\n            getValues,\n            handleSubmit,\n            formState: {errors}\n        } = useForm({\n            defaultValues: {title: \"\"}\n        });\n\n\n    /** Создает селект с метками событий из настроек\n     * @param object - объект\n     * @param key1 - имя ключа для значения\n     * @param key2 - имя ключа для метки\n     * @returns {*[]}\n     */\n    const makeColorOptionsForReactSelect = (object, key1, key2) => {\n        const array = [];\n        for (let i = 0; i < object.length; i++) {\n            // eslint-disable-next-line\n            let obj = new Map;\n            obj.set(\"value\", object[i][key1]);\n            obj.set(\"label\", object[i][key2]);\n            array.push(Object.fromEntries(obj))\n        }\n        return array;\n    }\n\n    const colorOptions = makeColorOptionsForReactSelect(calendCat, \"color\", \"name\");\n\n    //const [owner, setOwner] = useState(0); // owner\n    const [desc, setDesc] = useState(\"\"); // description\n    const [users, setUsers] = useState([]); // users\n    const [allDay, setAllDay] = useState(false); // allDay\n    const [endPicker, setEndPicker] = useState(new Date()); // end\n    const [startPicker, setStartPicker] = useState(new Date()); // start\n    const [calendarLabel, setCalendarLabel] = useState(colorOptions[0]); // calendar\n\n    /** Конструктор компонента Option\n     * @param data - данные, из к-рых берутся значения по ключу color\n     * @param props - пропсы\n     * @returns {JSX.Element}\n     * @constructor\n     */\n    const OptionComponent = ({data, ...props}) => {\n        return (\n            <components.Option {...props}>\n                <div className=\"flex flex-wrap items-center\">\n                    <Dot className=\"mr-3\" color={data.value} size=\"3\"/>\n                    <span>{data.label}</span>\n                </div>\n            </components.Option>\n        )\n    }\n\n    /** Констркутор компонента с пользователями\n     * @param data - данные\n     * @param props - пропсы\n     * @returns {JSX.Element}\n     * @constructor\n     */\n    const UsersComponent = ({data, ...props}) => {\n        return (\n            <components.Option {...props}>\n                <div className=\"flex flex-wrap items-center\">\n                    <Avatar size=\"6\" avatar={data.avatar} name={data.name} color={data.color}/>\n                    <span\n                        className=\"ml-3\">{data.label.split(\" \").slice(0, 1)} {data.label.split(\" \").slice(1).map((n) => n[0]).join(\". \").toUpperCase()}</span>\n                </div>\n            </components.Option>\n        )\n    }\n\n    /** Добавление события */\n    const handleAddEvent = () => {\n        const obj = {\n            title: getValues(\"title\"),\n            start: startPicker,\n            end: endPicker,\n            allDay,\n            display: \"block\",\n            extendedProps: {\n                calendar: calendarLabel[0].label,\n                users: users.length ? users : undefined,\n                desc: desc.length ? desc : undefined\n            }\n        };\n        dispatch(addEvent(obj));\n        refetchEvents();\n        handleCloseSidebar();\n        toast.success(\"Событие успешно добавлено\");\n    }\n\n    /** Сброс полей формы при закрытии */\n    const handleResetInputValues = () => {\n        dispatch(selectEvent({}));\n        setValue(\"title\", \"\");\n        setAllDay(false);\n        setDesc(\"\");\n        setUsers([]);\n        setCalendarLabel(colorOptions[0]);\n        setStartPicker(new Date());\n        setEndPicker(new Date());\n    };\n\n    const handleCloseSidebar = () => {\n        handleAddEventSidebar();\n        handleResetInputValues();\n    }\n\n    /** Установить поля сайдбара  */\n    const handleSelectedEvent = () => {\n        if (!isObjEmpty(selectedEvent)) {\n\n            const calendar = selectedEvent.extendedProps.calendar;\n\n            const resolveLabel = () => {\n                if (calendar.length) {\n                    return {label: calendarsColor[calendar], value: calendar, color: calendar};\n                } else {\n                    return colorOptions[0];\n                }\n            }\n\n            /** Ищет пользователей из списка по id пользователя\n             * @returns {[]} - массив значений для селекта\n             */\n            const resolveUsers = () => {\n                const array = [];\n                if (selectedEvent.extendedProps.users) {\n                    const userList = selectedEvent.extendedProps.users.length;\n                    if (userList > 0) {\n                        for (let i = 0; i < usersOptions.length; i++) {\n                            let opt = usersOptions[i]['options'];\n                            const filter = opt.filter(ob => selectedEvent.extendedProps.users.includes(ob.value));\n                            if (filter.length > 0) {\n                                Array.prototype.push.apply(array, filter)\n                            }\n                        }\n                    }\n                }\n                return array;\n            }\n\n            setValue(\"title\", selectedEvent.title || getValues(\"title\"));\n            setAllDay(selectedEvent.allDay || allDay);\n            setDesc(selectedEvent.extendedProps.description || desc);\n            setUsers(resolveUsers());\n            setStartPicker(new Date(selectedEvent.start));\n            setEndPicker(selectedEvent.allDay ? new Date(selectedEvent.start) : new Date(selectedEvent.end));\n            setCalendarLabel([resolveLabel()]);\n        }\n    }\n\n    /**\n     * (UI) updateEventInCalendar\n     * @param updatedEventData\n     * @param propsToUpdate\n     * @param extendedPropsToUpdate\n     */\n    const updateEventInCalendar = (updatedEventData, propsToUpdate, extendedPropsToUpdate) => {\n        const existingEvent = calendarApi.getEventById(updatedEventData.id)\n\n        // ** Set event properties except date related\n        // ? Docs: https://fullcalendar.io/docs/Event-setProp\n        // ** dateRelatedProps => [\"start\", \"end\", \"allDay\"]\n        // ** eslint-disable-next-line no-plusplus\n        for (let index = 0; index < propsToUpdate.length; index++) {\n            const propName = propsToUpdate[index]\n            existingEvent.setProp(propName, updatedEventData[propName])\n        }\n\n        // ** Set date related props\n        // ? Docs: https://fullcalendar.io/docs/Event-setDates\n        existingEvent.setDates(new Date(updatedEventData.start), new Date(updatedEventData.end), {\n            allDay: updatedEventData.allDay\n        })\n\n        // ** Set event\"s extendedProps\n        // ? Docs: https://fullcalendar.io/docs/Event-setExtendedProp\n        // ** eslint-disable-next-line no-plusplus\n        for (let index = 0; index < extendedPropsToUpdate.length; index++) {\n            const propName = extendedPropsToUpdate[index]\n            existingEvent.setExtendedProp(propName, updatedEventData.extendedProps[propName])\n        }\n    }\n\n    /** Обновляет событие в Store */\n    const handleUpdateEvent = () => {\n        if (getValues(\"title\").length) {\n            const eventToUpdate = {\n                id: selectedEvent.id,\n                title: getValues(\"title\"),\n                allDay: allDay,\n                start: startPicker,\n                end: endPicker,\n                extendedProps: {\n                    description: desc,\n                    users: users,\n                    calendar: calendarLabel[0].value\n                }\n            }\n\n            const propsToUpdate = [\"id\", \"title\"];\n            const extendedPropsToUpdate = [\"calendar\", \"users\", \"description\"];\n            dispatch(updateEvent(eventToUpdate));\n            updateEventInCalendar(eventToUpdate, propsToUpdate, extendedPropsToUpdate);\n\n            handleCloseSidebar();\n            toast.success(\"Событие обновлено\");\n        } else {\n            setError(\"title\", {\n                type: \"manual\"\n            })\n        }\n    }\n\n    /** UI удалить событие из календаря\n     * @param eventId - ID события\n     * FIXME изменить на fetch\n     */\n    const removeEventInCalendar = eventId => {\n        calendarApi.getEventById(eventId).remove();\n    }\n\n    /** Хандл удаления события */\n    const handleDeleteEvent = () => {\n        dispatch(removeEvent(selectedEvent.id))\n        removeEventInCalendar(selectedEvent.id)\n        handleCloseSidebar()\n        toast.error(\"Событие удалено\")\n    }\n\n    /** Конструтор Кнопок редактирования / удаления / добавления события\n     * @returns {JSX.Element}\n     * @constructor\n     */\n    const EventActions = () => {\n        if (isObjEmpty(selectedEvent) || (!isObjEmpty(selectedEvent) && !selectedEvent.title.length)) {\n            return (\n                <Fragment>\n                    <PrimaryButton type=\"submit\" label=\"Добавить\"/>\n                    <DangerButton type=\"reset\" label=\"Отмена\" onClick={handleCloseSidebar}/>\n                </Fragment>\n            )\n        } else {\n            return (\n                <Fragment>\n                    <PrimaryButton type=\"button\" label=\"Обновить\" onClick={handleUpdateEvent}/>\n                    <DangerButton type=\"button\" label=\"Удалить\" onClick={handleDeleteEvent}/>\n                </Fragment>\n            )\n        }\n    }\n\n    useEffect(() => {\n        if (open && selectEvent) {\n            handleSelectedEvent()\n        }\n        // eslint-disable-next-line\n    }, [open])\n\n    return (\n        <Transition.Root show={open} as={Fragment}>\n            <Dialog\n                as=\"div\"\n                className=\"fixed right-0 top-16 overflow-hidden\"\n                onClose={handleResetInputValues}\n            >\n                <div className=\"absolute right-0 top-16 overflow-hidden\">\n                    <Transition.Child\n                        as={Fragment}\n                        enter=\"ease-in-out duration-500\"\n                        enterFrom=\"opacity-0\"\n                        enterTo=\"opacity-100\"\n                        leave=\"ease-in-out duration-500\"\n                        leaveFrom=\"opacity-100\"\n                        leaveTo=\"opacity-0\"\n                    >\n                        <Dialog.Overlay className=\"absolute inset-0 bg-gray-500 bg-opacity-75 transition-opacity\"/>\n                    </Transition.Child>\n                    <div className=\"fixed right-0 top-16 bottom-0 pl-10 max-w-full flex\">\n                        <Transition.Child\n                            as={Fragment}\n                            enter=\"transform transition ease-in-out duration-500 sm:duration-700\"\n                            enterFrom=\"translate-x-full\"\n                            enterTo=\"translate-x-0\"\n                            leave=\"transform transition ease-in-out duration-500 sm:duration-700\"\n                            leaveFrom=\"translate-x-0\"\n                            leaveTo=\"translate-x-full\"\n                        >\n                            <div className=\"relative w-96\">\n                                <Transition.Child\n                                    as={Fragment}\n                                    enter=\"ease-in-out duration-500\"\n                                    enterFrom=\"opacity-0\"\n                                    enterTo=\"opacity-100\"\n                                    leave=\"ease-in-out duration-500\"\n                                    leaveFrom=\"opacity-100\"\n                                    leaveTo=\"opacity-0\"\n                                >\n                                    <div className=\"absolute top-0 left-0 -ml-8 pt-4 pr-2 flex sm:-ml-10 sm:pr-4\">\n                                        <button\n                                            type=\"button\"\n                                            className=\"rounded-md text-gray-700 dark:text-gray-200 hover:text-gray-500 dark:hover:text-gray-300 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                                            onClick={handleCloseSidebar}\n                                        >\n                                            <span className=\"sr-only\">Закрыть</span>\n                                            <XIcon className=\"h-6 w-6\" aria-hidden=\"true\"/>\n                                        </button>\n                                    </div>\n                                </Transition.Child>\n                                <div\n                                    className=\"h-full bg-white dark:bg-gray-900 p-6 overflow-y-auto border-l border-gray-200 dark:border-gray-700 shadow-lg\">\n                                    <div className=\"pb-16 space-y-6\">\n                                        <CardHeader className=\"\"\n                                                    title={selectedEvent && selectedEvent.title && selectedEvent.title.length ? \"Обновление События\" : \"Добавление События\"}/>\n                                        <Form\n                                            onSubmit={handleSubmit(data => {\n                                                if (data.title.length) {\n                                                    if (isObjEmpty(errors)) {\n                                                        if (isObjEmpty(selectedEvent) || (!isObjEmpty(selectedEvent) && !selectedEvent.title.length)) {\n                                                            handleAddEvent()\n                                                        } else {\n                                                            handleUpdateEvent()\n                                                        }\n                                                        handleCloseSidebar()\n                                                    }\n                                                } else {\n                                                    setError(\"title\", {\n                                                        type: \"manual\"\n                                                    })\n                                                }\n                                            })}\n                                        >\n                                            <div className=\"grid gap-2\">\n                                                <div className=\"mb-1\">\n                                                    <Label\n                                                        className=\"block text-sm font-medium text-gray-700 dark:text-gray-200\"\n                                                        for=\"title\">\n                                                        Название события <span className=\"text-red-400\">*</span>\n                                                    </Label>\n                                                    <Controller\n                                                        name=\"title\"\n                                                        control={control}\n                                                        render={({field}) => (\n                                                            <Input\n                                                                className=\"mt-1 bg-white dark:bg-gray-900 appearance-none block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 text-gray-900 dark:text-gray-100 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                                                                id=\"title\" placeholder=\"Введите название\"\n                                                                invalid={errors.title && true} {...field} />\n                                                        )}\n                                                    />\n                                                </div>\n                                                <div className=\"mb-1\">\n                                                    <Label\n                                                        className=\"block text-sm font-medium text-gray-700 dark:text-gray-200\"\n                                                        for=\"label\">\n                                                        Категория события\n                                                    </Label>\n                                                    <Select\n                                                        id=\"label\"\n                                                        value={calendarLabel}\n                                                        options={colorOptions}\n                                                        className=\"mt-1 react-select bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100 placeholder-gray-400 sm:text-sm\"\n                                                        classNamePrefix=\"select\"\n                                                        isClearable={false}\n                                                        onChange={data => setCalendarLabel([data])}\n                                                        components={{\n                                                            Option: OptionComponent\n                                                        }}\n                                                    />\n                                                </div>\n                                                <div className=\"mb-1\">\n                                                    <Label\n                                                        className=\"block text-sm font-medium text-gray-700 dark:text-gray-200\"\n                                                        for=\"startDate\">\n                                                        Начало события\n                                                    </Label>\n                                                    <Flatpickr\n                                                        required\n                                                        id=\"startDate\"\n                                                        name=\"startDate\"\n                                                        className=\"mt-1 bg-white dark:bg-gray-900 appearance-none block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 text-gray-900 dark:text-gray-100 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                                                        onChange={date => setStartPicker(date[0])}\n                                                        value={startPicker}\n                                                        options={{\n                                                            enableTime: allDay === false,\n                                                            dateFormat: \"Y-m-d H:i\"\n                                                        }}\n                                                    />\n                                                </div>\n                                                <div className=\"mb-1\">\n                                                    <Label\n                                                        className=\"block text-sm font-medium text-gray-700 dark:text-gray-200\"\n                                                        for=\"endDate\">\n                                                        Конец события\n                                                    </Label>\n                                                    <Flatpickr\n                                                        required\n                                                        id=\"endDate\"\n                                                        // tag={Flatpickr}\n                                                        name=\"endDate\"\n                                                        className=\"mt-1 bg-white dark:bg-gray-900 appearance-none block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 text-gray-900 dark:text-gray-100 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                                                        onChange={date => setEndPicker(date[0])}\n                                                        value={endPicker}\n                                                        options={{\n                                                            enableTime: allDay === false,\n                                                            dateFormat: \"Y-m-d H:i\"\n                                                        }}\n                                                    />\n                                                </div>\n                                                <div className=\"form-switch mt-1 flex items-center\">\n                                                    <Switch\n                                                        checked={allDay}\n                                                        onChange={setAllDay}\n                                                        className=\"flex-shrink-0 group relative rounded-full inline-flex items-center justify-center h-5 w-10 cursor-pointer focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                                                    >\n                                                        <span className=\"sr-only\">Use setting</span>\n                                                        <span aria-hidden=\"true\"\n                                                              className=\"pointer-events-none absolute bg-white w-full h-full rounded-md\"/>\n                                                        <span\n                                                            aria-hidden=\"true\"\n                                                            className={classNames(\n                                                                allDay ? \"bg-indigo-600\" : \"bg-gray-200\",\n                                                                \"pointer-events-none absolute h-4 w-9 mx-auto rounded-full transition-colors ease-in-out duration-200\"\n                                                            )}\n                                                        />\n                                                        <span\n                                                            aria-hidden=\"true\"\n                                                            className={classNames(\n                                                                allDay ? \"translate-x-5\" : \"translate-x-0\",\n                                                                \"pointer-events-none absolute left-0 inline-block h-5 w-5 border border-gray-200 rounded-full bg-white shadow transform ring-0 transition-transform ease-in-out duration-200\"\n                                                            )}\n                                                        />\n                                                    </Switch>\n                                                    <Label\n                                                        className=\"ml-2 text-sm font-medium text-gray-700 dark:text-gray-200\"\n                                                        for=\"allDay\">\n                                                        Весь день\n                                                    </Label>\n                                                </div>\n                                                <div className=\"mb-1\">\n                                                    <Label\n                                                        className=\"block text-sm font-medium text-gray-700 dark:text-gray-200\"\n                                                        for=\"users\">\n                                                        Назначить\n                                                    </Label>\n                                                    <Select\n                                                        isMulti\n                                                        Group\n                                                        placeholder=\"Выберите сотрудников\"\n                                                        id=\"users\"\n                                                        className=\"mt-1 react-select bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100 placeholder-gray-400 sm:text-sm\"\n                                                        classNamePrefix=\"select\"\n                                                        isClearable={false}\n                                                        options={usersOptions}\n                                                        value={users.length ? [...users] : null}\n                                                        onChange={data => setUsers([...data])}\n                                                        components={{\n                                                            Option: UsersComponent\n                                                        }}\n                                                    />\n                                                </div>\n                                                <div className=\"mb-1\">\n                                                    <Label\n                                                        className=\"block text-sm font-medium text-gray-700 dark:text-gray-200\"\n                                                        for=\"description\">\n                                                        Описание события\n                                                    </Label>\n                                                    <Input\n                                                        className=\"mt-1 bg-white dark:bg-gray-900 appearance-none block w-full px-3 py-2 border border-gray-300 dark:border-gray-600 text-gray-900 dark:text-gray-100 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                                                        type=\"textarea\"\n                                                        name=\"text\"\n                                                        id=\"description\"\n                                                        rows=\"3\"\n                                                        value={desc}\n                                                        onChange={e => setDesc(e.target.value)}\n                                                        placeholder=\"Введите описание\"\n                                                    />\n                                                </div>\n                                                <div className=\"flex mt-4\">\n                                                    <EventActions/>\n                                                </div>\n                                            </div>\n                                        </Form>\n                                    </div>\n                                </div>\n                            </div>\n                        </Transition.Child>\n                    </div>\n                </div>\n            </Dialog>\n        </Transition.Root>\n    )\n}\n\nexport default AddEventSidebar\n","import React, {Fragment, useEffect, useState} from \"react\";\nimport CalendarModule from \"./calendar/index\";\nimport SidebarLeft from \"./calendar/Sidebar\";\nimport AddEventSidebar from \"./calendar/AddEventSidebar\";\nimport ContentLayoutWithSidebar from \"../../layouts/ContentLayouts/ContentLayoutWithSidebar\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    addEvent,\n    fetchEvents,\n    removeEvent,\n    selectEvent,\n    updateAllFilters,\n    updateEvent,\n    updateFilter\n} from \"./calendar/store\";\nimport classnames from \"classnames\";\nimport {makeArrayKeyValue} from \"../../utils\";\nimport {calendCat} from \"../../@mock/SampleData\";\n\nconst breadcrumbs = [{name: \"Календарь\", href: \"#\", current: true}];\n\n/** Для использования в Fullcalendar */\nconst calendarsColor = makeArrayKeyValue(calendCat, \"color\", \"name\");\n\nconst Calendar = () => {\n    const dispatch = useDispatch();\n    const store = useSelector(state => state.calendar);\n\n    const [calendarApi, setCalendarApi] = useState(null);\n    const [addSidebarOpen, setAddSidebarOpen] = useState(false);\n    const [leftSidebarOpen, setLeftSidebarOpen] = useState(false);\n\n    /** Открывает сайдбар */\n    const handleAddEventSidebar = () => {\n        setAddSidebarOpen(!addSidebarOpen);\n    };\n\n    /** Открыает сайдбар слева (с фильтрами )\n     * @param val\n     */\n    const toggleSidebar = val => setLeftSidebarOpen(val);\n\n    /** Пустое событие\n     * @type {{allDay: boolean, extendedProps: {calendar: string, guests: *[], description: string, location: string}, start: string, end: string, title: string, url: string}}\n     */\n    const blankEvent = {\n        title: \"\",\n        start: \"\",\n        end: \"\",\n        allDay: false,\n        url: \"\",\n        extendedProps: {\n            calendar: \"\",\n            guests: [],\n            location: \"\",\n            description: \"\"\n        }\n    }\n\n    const refetchEvents = () => {\n        if (calendarApi !== null) {\n            calendarApi.refetchEvents()\n        }\n    }\n\n    // получаем события при монтировании\n    useEffect(() => {\n        dispatch(fetchEvents(store.selectedCalendars))\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [dispatch])\n\n    return (\n        <Fragment>\n            <ContentLayoutWithSidebar\n                boxed={true}\n                title=\"Календарь\"\n                breadcrumbs={breadcrumbs}\n                header=\"Календарь\"\n                sidebarSize=\"small\"\n                fullHeight={false}\n            >\n                <ContentLayoutWithSidebar.Sidebar>\n                    <div className=\"p-4\">\n                        <SidebarLeft\n                            store={store}\n                            dispatch={dispatch}\n                            updateFilter={updateFilter}\n                            toggleSidebar={toggleSidebar}\n                            updateAllFilters={updateAllFilters}\n                            handleAddEventSidebar={handleAddEventSidebar}\n                        />\n                    </div>\n                </ContentLayoutWithSidebar.Sidebar>\n                <ContentLayoutWithSidebar.Body>\n                    <CalendarModule\n                        store={store}\n                        dispatch={dispatch}\n                        blankEvent={blankEvent}\n                        calendarApi={calendarApi}\n                        selectEvent={selectEvent}\n                        updateEvent={updateEvent}\n                        toggleSidebar={toggleSidebar}\n                        calendarsColor={calendarsColor}\n                        setCalendarApi={setCalendarApi}\n                        handleAddEventSidebar={handleAddEventSidebar}\n                    />\n                    <div\n                        className={classnames(\"body-content-overlay\", {\n                            show: leftSidebarOpen === true\n                        })}\n                        onClick={() => toggleSidebar(false)}\n                    />\n                </ContentLayoutWithSidebar.Body>\n            </ContentLayoutWithSidebar>\n            <AddEventSidebar\n                store={store}\n                dispatch={dispatch}\n                addEvent={addEvent}\n                open={addSidebarOpen}\n                selectEvent={selectEvent}\n                updateEvent={updateEvent}\n                removeEvent={removeEvent}\n                calendarApi={calendarApi}\n                refetchEvents={refetchEvents}\n                calendarsColor={calendarsColor}\n                handleAddEventSidebar={handleAddEventSidebar}\n            />\n        </Fragment>\n    );\n};\n\nexport default Calendar;"],"names":["pages","classname","header","children","className","to","classNames","title","map","page","href","current","undefined","name","BasicButton","size","label","onClick","type","props","defaultProps","CardHeader","PropTypes","DangerButton","PrimaryButton","ContextContainer","React","ContentLayoutWithSidebar","boxed","breadcrumbs","sidebarSize","fullHeight","useState","sidebarOpen","setSidebarOpen","Fragment","Provider","value","config","join","Sidebar","useContext","sidebarSizes","small","mobile","desktop","medium","large","show","as","onClose","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","Body","CalendarModule","calendarRef","useRef","store","dispatch","calendarApi","setCalendarApi","handleAddEventSidebar","blankEvent","selectEvent","useEffect","getApi","calendarOptions","events","length","plugins","interactionPlugin","dayGridPlugin","timeGridPlugin","listPlugin","initialView","headerToolbar","start","end","editable","eventResizableFromStart","dragScroll","dayMaxEvents","navLinks","locale","ruLocale","eventClassNames","colorName","event","_def","extendedProps","calendar","eventClick","clickedEvent","ui","display","dateClick","info","ev","date","ref","memo","id","color","description","onChange","checked","checkboxSize","container","checkbox","red","orange","yellow","green","cyan","blue","indigo","pink","gray","sky","teal","htmlFor","Dot","filters","toggleSidebar","updateFilter","updateAllFilters","PlusIcon","e","target","selectedCalendars","filter","includes","open","addEvent","updateEvent","removeEvent","refetchEvents","calendarsColor","selectedEvent","useForm","defaultValues","control","setError","setValue","getValues","handleSubmit","errors","formState","colorOptions","object","key1","key2","array","i","obj","Map","set","push","Object","fromEntries","makeColorOptionsForReactSelect","calendCat","desc","setDesc","users","setUsers","allDay","setAllDay","Date","endPicker","setEndPicker","startPicker","setStartPicker","calendarLabel","setCalendarLabel","handleResetInputValues","handleCloseSidebar","handleUpdateEvent","eventToUpdate","updatedEventData","propsToUpdate","extendedPropsToUpdate","existingEvent","getEventById","index","propName","setProp","setDates","setExtendedProp","updateEventInCalendar","toast","handleDeleteEvent","eventId","remove","EventActions","isObjEmpty","usersOptions","ob","Array","prototype","apply","resolveUsers","handleSelectedEvent","XIcon","onSubmit","data","handleAddEvent","for","render","field","placeholder","invalid","options","classNamePrefix","isClearable","components","Option","c","required","enableTime","dateFormat","isMulti","Group","Avatar","avatar","split","slice","n","toUpperCase","rows","makeArrayKeyValue","useDispatch","useSelector","state","addSidebarOpen","setAddSidebarOpen","leftSidebarOpen","setLeftSidebarOpen","val","fetchEvents","url","guests","location","classnames"],"sourceRoot":""}