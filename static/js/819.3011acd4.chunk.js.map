{"version":3,"file":"static/js/819.3011acd4.chunk.js","mappings":"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","sources":["components/PageHeader.jsx","layouts/ContentLayouts/ContentLayoutBlank/index.js","pages/Phonebook.js","../node_modules/@heroicons/react/solid/esm/ChevronLeftIcon.js","../node_modules/@heroicons/react/solid/esm/ChevronRightIcon.js","../node_modules/@heroicons/react/solid/esm/HomeIcon.js"],"sourcesContent":["import React from \"react\";\nimport {ChevronLeftIcon, ChevronRightIcon, HomeIcon} from \"@heroicons/react/solid\";\nimport {Link} from \"react-router-dom\";\nimport classNames from \"classnames\";\n\n/** Заголовок содержимого страницы, \"хлебные крошки\"\n * @param pages - объект для навигации:\n * {name: пункт навигации, href: ссылка на элемент, current: флаг текущей страницы (bool)}\n * @param classname - доп. класс/ы\n * @param header - заголовок\n * @param children - содержимое правой части заголовка (кнопки и т.д.)\n * @returns {JSX.Element}\n * @constructor\n */\nconst PageHeader = ({pages, classname, header, children}) => {\n\n    return (\n        <div className={classname}>\n            <nav className=\"sm:hidden\" aria-label=\"Назад\">\n                <Link\n                    to={-1}\n                    className=\"flex items-center text-sm font-medium text-gray-500 hover:text-gray-700\"\n                >\n                    <ChevronLeftIcon className=\"flex-shrink-0 -ml-1 mr-1 h-5 w-5 text-gray-400\"/>\n                    Назад\n                </Link>\n            </nav>\n            <nav className={classNames(\"w-full hidden sm:flex\")} aria-label=\"Навигация\">\n                <ol className=\"flex items-center space-x-4\">\n                    <li>\n                        <div>\n                            <Link\n                                to=\"/home\"\n                                className=\"text-gray-400 hover:text-gray-500\"\n                                title=\"Главная\"\n                            >\n                                <HomeIcon className=\"flex-shrink-0 h-5 w-5\" aria-hidden=\"true\"/>\n                                <span className=\"sr-only\" title=\"Главная\">Главная</span>\n                            </Link>\n                        </div>\n                    </li>\n                    {pages.map((page) => (\n                        <li key={page.name}>\n                            <div className=\"flex items-center\">\n                                <ChevronRightIcon className=\"flex-shrink-0 h-5 w-5 text-gray-400\" aria-hidden=\"true\"/>\n                                <Link\n                                    to={page.href}\n                                    className=\"ml-4 text-sm font-medium text-gray-500 hover:text-gray-700\"\n                                    aria-current={\n                                        page.current\n                                            ? \"page\"\n                                            : undefined\n                                    }\n                                >\n                                    {page.name}\n                                </Link>\n                            </div>\n                        </li>\n                    ))}\n                </ol>\n            </nav>\n            {header || children\n                ? <div\n                    className={classNames(\"mt-2 md:flex md:items-center\", header ? \"md:justify-between\" : \"md:justify-end\")}>\n                    {header\n                        ? <div className=\"flex-1 min-w-0\">\n                            <h2 className=\"text-xl font-bold leading-7 text-gray-700 dark:text-gray-200 sm:text-2xl sm:truncate\">\n                                {header}\n                            </h2>\n                        </div>\n                        : \"\"}\n                    <div className=\"mt-4 justify-end flex-shrink-0 flex md:mt-0 md:ml-4\">\n                        {children}\n                    </div>\n                </div>\n                : \"\"}\n        </div>\n    )\n};\n\nexport default PageHeader;","import React, {Fragment, useContext} from \"react\";\nimport {Helmet} from \"react-helmet\";\nimport config from \"../../../config\";\nimport PageHeader from \"../../../components/PageHeader\";\n\n/** Контекст для передачи в дочерние компоненты\n * @type {React.Context<null>} */\nconst ContextContainer = React.createContext(null);\n\n/* Пример использования\n<ContentLayoutBlank boxed={true} title=\"Заголовок\" breadcrumbs={breadcrumbs} header=\"Заголовок\">\n    <ContentLayoutBlank.Header>\n    <Содержимое заголовка>\n    </ContentLayoutBlank.Header>\n    <ContentLayoutBlank.Body>\n    <Содержимое страницы>\n    </ContentLayoutBlank.Body>\n</ContentLayoutBlank>\n*/\n\n/** Раскладка содержимого пустая\n * @param children - дочерние элементы\n * @param boxed - узкое зодержимое\n * @param title - meta заголовок страницы\n * @param breadcrumbs - навигация\n * @param header - заголовок содержимого\n * @returns {JSX.Element}\n * @constructor\n */\nexport default function ContentLayoutBlank({children, boxed, title, breadcrumbs, header}) {\n    return (\n        <Fragment>\n            {/* Контекст для передачи в дочерние элементы */}\n            <ContextContainer.Provider value={{boxed, header, breadcrumbs}}>\n                <Helmet>\n                    <title>{config.APP_NAME} - {title}</title>\n                </Helmet>\n                <div className=\"overflow-hidden\">\n                    {/* Доочерние компоненты */}\n                    {children}\n                </div>\n            </ContextContainer.Provider>\n        </Fragment>\n    )\n}\n\n/** Отрисовщик содержимого\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nconst Body = (props) => {\n    const {boxed} = useContext(ContextContainer);\n    return (\n        <>\n            <div\n                className={[\"main-content min-h-full flex overflow-hidden relative p-4 pt-0 xl:pt-4\", boxed ? \"max-w-7xl mx-auto\" : \"\"].join(\" \")}>\n                <div\n                    className=\"flex-1 z-0 overflow-y-auto\">\n                    {props.children}\n                </div>\n            </div>\n        </>\n    )\n}\n\n/** Отрисовщик заголовка содержимого\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nconst Header = (props) => {\n    const {breadcrumbs, header} = useContext(ContextContainer);\n    return (\n        <>\n            <PageHeader pages={breadcrumbs} classname=\"breadcrumbs p-4 pb-4 xl:pb-0\" header={header}>\n                {props.children}\n            </PageHeader>\n        </>\n    )\n}\n\n/** Компонент содержимого\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nContentLayoutBlank.Body = (props) => Body(props);\n\n/** Компонент заголовка содержимого\n * @param props\n * @returns {JSX.Element}\n * @constructor\n */\nContentLayoutBlank.Header = (props) => Header(props);","import ContentLayoutBlank from \"../layouts/ContentLayouts/ContentLayoutBlank\";\n\nconst breadcrumbs = [{name: \"Телефонный справочник\", href: \"#\", current: true}];\n\nconst Phonebook = () => {\n    return (\n        <ContentLayoutBlank header=\"Телефонный справочник\" breadcrumbs={breadcrumbs} title=\"Телефонный справочник\" boxed={false} >\n            <ContentLayoutBlank.Header>\n                {/* Содержимое заголовка: кнопки и т.д. */}\n            </ContentLayoutBlank.Header>\n            <ContentLayoutBlank.Body>\n                <div className=\"p-4\">\n                    {/* Содержимое страницы */}\n                </div>\n            </ContentLayoutBlank.Body>\n        </ContentLayoutBlank>\n    );\n};\n\nexport default Phonebook;","import * as React from \"react\";\n\nfunction ChevronLeftIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(ChevronLeftIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction ChevronRightIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\",\n    clipRule: \"evenodd\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(ChevronRightIcon);\nexport default ForwardRef;","import * as React from \"react\";\n\nfunction HomeIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 20 20\",\n    fill: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(HomeIcon);\nexport default ForwardRef;"],"names":["pages","classname","header","children","className","to","classNames","title","map","page","href","current","undefined","name","ContextContainer","React","ContentLayoutBlank","boxed","breadcrumbs","Fragment","Provider","value","config","Body","props","useContext","join","Header","ForwardRef","svgRef","Object","assign","xmlns","viewBox","fill","ref","fillRule","d","clipRule"],"sourceRoot":""}