{"version":3,"file":"static/js/161.6be47a85.chunk.js","mappings":"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","sources":["router/index.js","layouts/layout-wrapper.js","layouts/BlankLayout/index.js","layouts/MainLayout/components/scrolltop.js","assets/images/logo/isp-logo.svg","layouts/MainLayout/components/menu/NavMenuLink.js","layouts/MainLayout/components/menu/NavMenuGroup.js","layouts/MainLayout/components/menu/NavMenuSectionHeader.js","layouts/MainLayout/components/menu/NavMenuItems.js","layouts/MainLayout/components/menu/index.js","components/elements/Badge.jsx","layouts/MainLayout/components/menu/MessageDropdown.jsx","layouts/MainLayout/components/navbar.js","utils/Hooks/useSkin.js","layouts/MainLayout/index.js","router/PublicRoute.js","router/PrivateRoute.js","router/allRoutes.js","utils/Hooks/useLayout.js","App.js","components/elements/AvatarBasic.jsx","components/elements/Avatar.jsx","components/elements/AvatarCircularWithPlaceholderInitials.jsx","components/ui/Toast.jsx"],"sourcesContent":["import {useRoutes} from \"react-router-dom\";\n\nconst Router = ({allRoutes}) => {\n    return useRoutes([...allRoutes])\n}\n\nexport default Router\n","import {Fragment, memo, useEffect} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {handleMenuCollapsed} from \"../store/layout\";\n\nconst LayoutWrapper = props => {\n\n    /** Пропсы */\n    const {children, routeMeta} = props;\n\n    /** Хранилище */\n    const dispatch = useDispatch();\n    const layoutStored = \"main\";\n\n    /** Переменные */\n    const appLayoutCondition =\n        (layoutStored.layout !== \"main\" && !routeMeta) ||\n        (layoutStored.layout !== \"main\" && routeMeta && !routeMeta.appLayout);\n\n    const Tag = appLayoutCondition ? \"div\" : Fragment;\n\n    /** Ф-я очистки */\n    const cleanUp = () => {\n        if (routeMeta) {\n            if (routeMeta.menuCollapsed) {\n                dispatch(handleMenuCollapsed(!routeMeta.menuCollapsed));\n            }\n        }\n    }\n\n    /** ComponentDidMount */\n    useEffect(() => {\n        if (routeMeta) {\n            if (routeMeta.menuCollapsed) {\n                dispatch(handleMenuCollapsed(routeMeta.menuCollapsed));\n            }\n        }\n        return () => cleanUp();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [routeMeta]);\n\n    return (\n        <Tag {...(appLayoutCondition ? {className: \"content-body overflow-y-scroll h-full\"} : {})}>{children}</Tag>\n    )\n}\n\nexport default memo(LayoutWrapper)\n","import {Outlet} from \"react-router-dom\";\nimport React, {useEffect, useState} from \"react\";\n\n/** Пустая раскладка без меню и заголовка\n * @returns {JSX.Element|null}\n * @constructor\n */\nconst BlankLayout = () => {\n    /** Стейты */\n    const [isMounted, setIsMounted] = useState(false);\n\n    useEffect(() => {\n        setIsMounted(true);\n        return () => setIsMounted(false);\n    }, []);\n\n    if (!isMounted) {\n        return null;\n    }\n\n    return (\n        <div className=\"w-full h-screen bg-white dark:bg-gray-900\">\n            <Outlet/>\n        </div>\n    );\n};\n\nexport default BlankLayout;\n","import React, {useEffect, useState} from \"react\";\nimport Proptypes from \"prop-types\";\nimport {ArrowUp} from \"react-feather\";\n\nconst ScrollTop = props => {\n\n    const {showOffset, scrollBehaviour, ...rest} = props\n\n    /** Стейт видимости */\n    const [visible, setVisible] = useState(false)\n\n    useEffect(() => {\n        if (window) {\n            window.addEventListener(\"scroll\", () => {\n                if (window.pageYOffset >= showOffset) {\n                    setVisible(true)\n                } else {\n                    setVisible(false)\n                }\n            })\n        }\n        // eslint-disable-next-line\n    }, [])\n\n    const handleScrollToTop = () => {\n        window.scroll({top: 0, behavior: scrollBehaviour})\n    }\n\n    return (\n        visible && (\n            <button\n                className=\"flex fixed px-3 py-2 w-12 h-12 rounded-lg z-50 bottom-6 right-6 items-center justify-center hover:bg-indigo-700\"\n                onClick={handleScrollToTop} {...rest}>\n                <ArrowUp size={14}/>\n            </button>\n        )\n    )\n}\n\nexport default ScrollTop\n\nScrollTop.propTypes = {\n    showOffset: Proptypes.number,\n    scrollBehaviour: Proptypes.oneOf([\"smooth\", \"instant\", \"auto\"])\n}\n\nScrollTop.defaultProps = {\n    scrollBehaviour: \"smooth\"\n}\n","var _style, _path, _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgIspLogo(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"\\\\u0421\\\\u043B\\\\u043E\\\\u0439_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 408\",\n    style: {\n      enableBackground: \"new 0 0 512 408\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _style || (_style = /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\"\n  }, \"\\n\\t.st0{fill:url(#SVGID_1_);}\\n\\t.st1{fill:#FFFFFF;}\\n\")), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"SVGID_1_\",\n    gradientUnits: \"userSpaceOnUse\",\n    x1: 35.2959,\n    y1: 1049.1949,\n    x2: 508.7033,\n    y2: 673.4041,\n    gradientTransform: \"matrix(1 0 0 1 0 -670)\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0,\n    style: {\n      stopColor: \"#3C64F4\"\n    }\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    style: {\n      stopColor: \"#7590F6\"\n    }\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st0\",\n    d: \"M455.3,343.4v-6.7V71.3v-6.7c0-3.9,0.1-7.7,0.2-11.3c1-27.7-20.6-53.3-49.9-53.3H106.3 C77.1,0,55.5,25.6,56.4,53.3c0.1,3.6,0.2,7.4,0.2,11.3l0,0v10.3v258.2v13.2c0,2.9-0.1,5.7-0.2,8.4c-1,27.7,20.6,53.3,49.9,53.3 h299.4c29.2,0,50.8-25.6,49.9-53.3C455.4,351.1,455.3,347.3,455.3,343.4z\"\n  })), _g || (_g = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M374.5,141.6c-0.2,30.9-23.4,53-56.4,53.6c-32.9,0.6-57.2,19.2-64,49.8c-1.7,7.9-1.4,16.2-2.1,24.4 c-1.9,22.4-13,38.7-33.9,47c-21.4,8.5-41.4,4.5-57.9-11.4c-16.2-15.6-20.6-35.3-13.3-56.4c7.7-22.2,24.4-33.9,47.7-36.3 c30.2-3.1,54.8-15.2,66.5-44.8c3.7-9.4,4.4-20.2,5.3-30.5c2.7-29.6,26.9-51.1,56.8-49.8C352.1,88.5,374.7,112.5,374.5,141.6z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M266.4,266.1c0.1-30.1,23.9-53.7,54-53.8c30.4,0,54.4,24.4,54,54.9c-0.4,29.8-24.9,53.8-54.6,53.4 C289.8,320.2,266.3,296.2,266.4,266.1z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    className: \"st1\",\n    d: \"M198.2,195.2c-30.2,0.1-54.1-23.4-54.3-53.5c-0.2-30,23.4-54.2,53.3-54.5c30.5-0.3,55,23.8,54.9,54.1 C252,171.3,228.3,195.1,198.2,195.2z\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIspLogo);\nexport default __webpack_public_path__ + \"static/media/isp-logo.87045208f3e83460b7e88b5bee6cd431.svg\";\nexport { ForwardRef as ReactComponent };","import {Link, useLocation} from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport React, {useEffect, useState} from \"react\";\n\nconst NavMenuLink = ({item, menuCollapsed}) => {\n    /** Текущий элемент меню */\n    const [activeItem, setActiveItem] = useState(null)\n\n    /** Текущее местоположение в адресной строке\n     * @type {Location<LocationState>}\n     */\n    const location = useLocation();\n    const currentURL = useLocation().pathname;\n\n    useEffect(() => {\n        setActiveItem(currentURL)\n        // eslint-disable-next-line\n    }, [location])\n\n    return (\n        <div\n            key={item.id}\n        >\n            {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n            <Link\n                to={item.alias}\n                className={classNames(item.alias === activeItem || \"/\" + item.alias === activeItem\n                    ? \"bg-indigo-100 dark:bg-gray-800 text-gray-900 dark:text-gray-100 flex\"\n                    : \"flex text-gray-500 hover:text-gray-500 dark:hover:text-gray-400 hover:bg-gray-200 dark:hover:bg-gray-700\",\n                    \"group flex items-center py-4 text-base leading-6 rounded-md\",\n                    menuCollapsed\n                        ? \"justify-center\"\n                        : \"px-2\"\n                )}\n\n                aria-current={\n                    activeItem ? \"page\" : undefined\n                }\n                onClick={(e) => {\n                    if (\n                        item.alias.length === 0 ||\n                        item.alias === \"#\" ||\n                        item.disabled === true\n                    ) {\n                        e.preventDefault();\n                    }\n                }}\n            >\n                {/** Значок элемента, если меню узкое, отступ убирается */}\n                <i className={classNames(\n                    menuCollapsed\n                        ? \"\"\n                        : \"mr-4\",\n                    \"flex-shrink-0 flex items-center text-2xl mdi relative\",\n                    item.icon)\n                }\n                >\n                    {item.badgeColor\n                        ? (\n                            <span className={classNames(\n                                \"absolute top-0.5 right-0 inline-flex items-center w-2 h-2 rounded-full text-xs font-medium\",\n                                item.badgeColor,\n                                menuCollapsed\n                                    ? \"\"\n                                    : \"ml-auto\"\n                            )\n                            }>\n                    </span>\n                        )\n                        : null\n                    }\n                </i>\n                {/** Название элемента меню, если меню узкое, не отрисовывается */}\n                {!menuCollapsed\n                    ? item.pagetitle\n                    : \"\"}\n                {/** Отрисовка бейджа для меню */}\n\n            </Link>\n        </div>\n    );\n};\n\nexport default NavMenuLink;\n","import React, {useEffect} from \"react\";\nimport {useLocation} from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport MenuNavItems from \"./NavMenuItems\";\nimport {makeArrayFromObj} from \"../../../../utils\";\n\n/** Проверяет, есть ли у потомков элемента текущий url\n * @param item - элемент\n * @param currentUrl - текущий url\n * @returns {boolean}\n */\nexport const hasActiveChild = (item, currentUrl) => {\n    const {children} = item;\n\n    if (!children) {\n        return false;\n    }\n\n    for (const child of makeArrayFromObj(children)) {\n        if (child.children) {\n            if (hasActiveChild(child, currentUrl)) {\n                return true;\n            }\n        }\n\n        /** Проверяет, если ли у потомка ссылка, и активна ли она */\n        if (\n            child &&\n            child.alias &&\n            currentUrl &&\n            (child.alias === currentUrl || currentUrl.includes(child.alias))\n        ) {\n            return true;\n        }\n    }\n    return false;\n};\n\n/** Проверяет, является ли элемент потомком\n * заданного элемента\n * @param children - потомок\n * @param openGroup - группа\n * @param currentActiveGroup - текущая активная группа\n */\nexport const removeChildren = (children, openGroup, currentActiveGroup) => {\n    children.forEach((child) => {\n        if (!currentActiveGroup.includes(child.id)) {\n            const index = openGroup.indexOf(child.id);\n            if (index > -1) openGroup.splice(index, 1);\n            if (child.children)\n                removeChildren(child.children, openGroup, currentActiveGroup);\n        }\n    });\n};\n\nconst NavMenuGroup = ({\n                          item,\n                          groupOpen,\n                          activeItem,\n                          parentItem,\n                          groupActive,\n                          setGroupOpen,\n                          menuCollapsed,\n                          setGroupActive,\n                          currentActiveGroup,\n                          setCurrentActiveGroup,\n                          ...rest\n                      }) => {\n    const location = useLocation();\n    const currentURL = useLocation().pathname;\n\n    /** Переключает открытие группы\n     * @param item - элемент\n     * @param parent - родитель\n     */\n    const toggleOpenGroup = (item, parent) => {\n        let openGroup = groupOpen;\n        const activeGroup = groupActive;\n\n        /** Если группа открыта и нажата, закрыть группу */\n        if (openGroup.includes(item.id)) {\n            openGroup.splice(openGroup.indexOf(item.id), 1);\n\n            /** Если у нажатой группы есть открытые потомки, удалить их, чтобы закрыть группу */\n            if (item.children) {\n                removeChildren(item.children, openGroup, groupActive);\n            }\n        } else if (\n            activeGroup.includes(item.id) ||\n            currentActiveGroup.includes(item.id)\n        ) {\n            /** Если нажатая группа активна */\n\n            /** Если активная группа закрыта и нажата снова, нужно открыть активную группу, иначе закрыть активную группу */\n            if (\n                !activeGroup.includes(item.id) &&\n                currentActiveGroup.includes(item.id)\n            ) {\n                activeGroup.push(item.id);\n            } else {\n                activeGroup.splice(activeGroup.indexOf(item.id), 1);\n            }\n\n            /** Обновить активную группу */\n            setGroupActive([...activeGroup]);\n        } else if (parent) {\n            /** Если нажатая группа - потомок открытой группы, вначале удалить все открытые группы в этом родителе */\n            if (parent.children) {\n                removeChildren(parent.children, openGroup, groupActive);\n            }\n\n            /** После удаления всех открытых групп под этим родителем, добавить нажатую группу в массив открытых групп */\n            if (!openGroup.includes(item.id)) {\n                openGroup.push(item.id);\n            }\n        } else {\n            // ** If clicked on another group that is not active or open, create openGroup array from scratch\n\n            // ** Empty Open Group array\n            openGroup = [];\n\n            // ** Push current clicked group item to Open Group array\n            if (!openGroup.includes(item.id)) {\n                openGroup.push(item.id);\n            }\n        }\n        setGroupOpen([...openGroup]);\n    };\n\n    // ** On Group Item Click\n    const onCollapseClick = (e, item) => {\n        toggleOpenGroup(item, parentItem)\n        e.preventDefault()\n    }\n\n    // ** Checks url & updates active item\n    useEffect(() => {\n        if (hasActiveChild(item, currentURL)) {\n            if (!groupActive.includes(item.id)) groupActive.push(item.id);\n        } else {\n            const index = groupActive.indexOf(item.id);\n            if (index > -1) groupActive.splice(index, 1);\n        }\n        setGroupActive([...groupActive]);\n        setCurrentActiveGroup([...groupActive]);\n        setGroupOpen([]);\n        // eslint-disable-next-line\n    }, [location]);\n\n    // ** Returns condition to add open class\n    const openClassCondition = (id) => {\n        if ((menuCollapsed) || menuCollapsed === false) {\n            if (groupActive.includes(id) || groupOpen.includes(id)) {\n                return true;\n            }\n        } else if (\n            groupActive.includes(id) &&\n            menuCollapsed\n        ) {\n            return false;\n        } else {\n            return null;\n        }\n    };\n\n    return (\n        <div key={item.id} className=\"space-y-1 w-full\">\n            <>\n                <div className=\"w-full\">\n                    <a href=\"/\" className={classNames({open: openClassCondition(item.id)},\n                        groupActive.includes(item.id) || groupOpen.includes(item.id) || currentActiveGroup.includes(item.id)\n                            ? \"bg-indigo-100 dark:bg-gray-800 text-gray-900 dark:text-gray-100 flex\"\n                            : \"flex text-gray-500 hover:text-gray-500 dark:hover:text-gray-400 hover:bg-gray-200 dark:hover:bg-gray-700\",\n                        \"group flex items-center py-4 text-base leading-6 rounded-md  w-full hover:cursor-pointer\",\n                        menuCollapsed\n                            ? \"justify-end pr-1\"\n                            : \"px-2 justify-between\"\n                    )}\n                       aria-current={\n                           groupActive.includes(item.id) || groupOpen.includes(item.id) || currentActiveGroup.includes(item.id) ? \"page\" : undefined\n                       }\n                       onClick={e => onCollapseClick(e, item)}\n                    >\n                        <div className=\"flex items-center\">\n                            <i className={classNames(menuCollapsed ? \"\" : \"mr-4\",\n                                \"flex-shrink-0 flex items-center text-2xl mdi\", item.icon)}/>\n                            {!menuCollapsed ? item.pagetitle : \"\"}\n                        </div>\n                        <svg xmlns=\"http://www.w3.org/2000/svg\"\n                             className={classNames(\n                                 groupActive.includes(item.id) || groupOpen.includes(item.id) || currentActiveGroup.includes(item.id) ? \"text-gray-400 rotate-90\" : \"text-gray-300\",\n                                 \"flex-shrink-0 h-4 w-4 transform group-hover:text-gray-400 transition-colors ease-in-out duration-150\"\n                             )}\n                             viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                            <path fillRule=\"evenodd\"\n                                  d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"\n                                  clipRule=\"evenodd\"/>\n                        </svg>\n                    </a>\n\n                </div>\n                <div className=\"space-y-1\">\n                    {groupActive.includes(item.id) || groupOpen.includes(item.id) || currentActiveGroup.includes(item.id) ? (\n                        <MenuNavItems\n                            {...rest}\n                            items={makeArrayFromObj(item.children)}\n                            groupActive={groupActive}\n                            setGroupActive={setGroupActive}\n                            currentActiveGroup={currentActiveGroup}\n                            setCurrentActiveGroup={setCurrentActiveGroup}\n                            groupOpen={groupOpen}\n                            setGroupOpen={setGroupOpen}\n                            parentItem={item}\n                            menuCollapsed={menuCollapsed}\n                            activeItem={activeItem}\n                        />\n                    ) : \"\"}\n                </div>\n            </>\n\n        </div>\n    );\n};\n\nexport default NavMenuGroup;\n","import {MoreHorizontal} from \"react-feather\";\nimport React from \"react\";\n\n/** Заголовок группы меню сайдбара\n * @param item - элемент заголовка\n * @param menuCollapsed - состояние меню узкое/широкое\n * @returns {JSX.Element}\n * @constructor */\nconst NavMenuSectionHeader = ({item, menuCollapsed}) => {\n    return (\n        <div className=\"text-gray-400 text-xs font-medium uppercase tracking-wide my-3\"\n             key={item.header}>\n            {/* Если узкое, название скрывается */}\n            {!menuCollapsed\n                ? <span>{item.header}</span>\n                : \"\"}\n            {/* Если узкое, показывается значк из трех точек вместо заголовка */}\n            {menuCollapsed\n                ? <MoreHorizontal className=\"feather-more-horizontal\"/>\n                : \"\"}\n        </div>\n    );\n};\n\nexport default NavMenuSectionHeader;\n","import NavMenuLink from \"./NavMenuLink\";\nimport NavMenuGroup from \"./NavMenuGroup\";\nimport NavMenuSectionHeader from \"./NavMenuSectionHeader\";\nimport React from \"react\";\n\n/** Возвращает заголовок, если указан header, группу, если children, иначе ссылку\n * @param item - элемент\n * @returns {string}\n */\nexport const resolveNavItemComponent = (item) => {\n    if (item.header) return \"NavMenuSectionHeader\";\n    if (item.children) return \"NavMenuGroup\";\n    return \"NavMenuLink\";\n};\n\nconst MenuNavItems = (props) => {\n\n    /** Объект компонентов\n     * @type {{NavMenuSectionHeader: (function({item: *, menuCollapsed?: *}): JSX.Element), NavMenuLink: (function({item: *, menuCollapsed?: *}): JSX.Element), NavMenuGroup: (function({item?: *, groupOpen: *, activeItem: *, parentItem?: *, groupActive?: *, setGroupOpen: *, menuCollapsed?: *, setGroupActive: *, currentActiveGroup: *, setCurrentActiveGroup: *, [p: string]: *}): JSX.Element)}}\n     */\n    const Components = {\n        NavMenuLink: NavMenuLink,\n        NavMenuGroup: NavMenuGroup,\n        NavMenuSectionHeader: NavMenuSectionHeader,\n    };\n\n    /** Рендер элементов меню */\n    return props.items.map((item, index) => {\n        const TagName = Components[resolveNavItemComponent(item)];\n        if (item.children) {\n            return (\n                <TagName key={item.id || item.header} item={item} index={index}\n                         menuCollapsed={props.menuCollapsed} {...props} />\n            );\n        }\n        return <TagName key={item.id || item.header} item={item} menuCollapsed={props.menuCollapsed} {...props} />;\n    });\n};\n\nexport default MenuNavItems;\n","import React, {Fragment, useState} from \"react\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport {Dialog, Transition} from \"@headlessui/react\";\nimport {XIcon} from \"@heroicons/react/outline\";\nimport logo from \"../../../../assets/images/logo/isp-logo.svg\";\nimport classNames from \"classnames\";\nimport {Circle, Disc} from \"react-feather\";\nimport config from \"../../../../config\";\nimport NavMenuItems from \"./NavMenuItems\";\n\nconst Sidebar = (props) => {\n    const {\n        menuCollapsed,\n        menuData,\n        menuVisibility,\n        setMenuVisibility,\n        setMenuCollapsed,\n    } = props;\n\n    /** Стейты */\n    const [groupOpen, setGroupOpen] = useState([])\n    const [groupActive, setGroupActive] = useState([])\n    const [currentActiveGroup, setCurrentActiveGroup] = useState([])\n\n    /** Кнопка-переключатель узкого/широкого меню */\n    const MenuToggler = () => {\n        if (menuCollapsed) {\n            return (\n                <button\n                    className=\"sidebar-collapse-button bg-white dark:bg-gray-900 p-1 rounded-full text-gray-400 dark:text-gray-500 dark:hover:text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                    onClick={() => setMenuCollapsed(false)}\n                >\n\n                    <Circle/>\n                </button>\n            );\n        } else {\n            return (\n                <button\n                    className=\"sidebar-collapse-button bg-white dark:bg-gray-900 p-1 rounded-full text-gray-400 dark:text-gray-500 dark:hover:text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                    onClick={() => setMenuCollapsed(true)}\n                >\n                    <Disc/>\n                </button>\n            );\n        }\n    };\n\n    return (\n        <>\n            {/** Мобильное меню */}\n            <Transition.Root show={menuVisibility} as={Fragment}>\n                <Dialog\n                    as=\"div\"\n                    className=\"fixed inset-0 flex z-40 lg:hidden\"\n                    onClose={setMenuVisibility}\n                >\n                    <Transition.Child\n                        as={Fragment}\n                        enter=\"transition-opacity ease-linear duration-300\"\n                        enterFrom=\"opacity-0\"\n                        enterTo=\"opacity-100\"\n                        leave=\"transition-opacity ease-linear duration-300\"\n                        leaveFrom=\"opacity-100\"\n                        leaveTo=\"opacity-0\"\n                    >\n                        <Dialog.Overlay className=\"fixed inset-0 bg-gray-600 bg-opacity-75\"/>\n                    </Transition.Child>\n                    <Transition.Child\n                        as={Fragment}\n                        enter=\"transition ease-in-out duration-300 transform\"\n                        enterFrom=\"-translate-x-full\"\n                        enterTo=\"translate-x-0\"\n                        leave=\"transition ease-in-out duration-300 transform\"\n                        leaveFrom=\"translate-x-0\"\n                        leaveTo=\"-translate-x-full\"\n                    >\n                        <div\n                            className=\"relative flex-1 flex flex-col max-w-xs w-full pt-5 pb-4 bg-white dark:bg-gray-900 shadow border-r border-gray-200\">\n                            <Transition.Child\n                                as={Fragment}\n                                enter=\"ease-in-out duration-300\"\n                                enterFrom=\"opacity-0\"\n                                enterTo=\"opacity-100\"\n                                leave=\"ease-in-out duration-300\"\n                                leaveFrom=\"opacity-100\"\n                                leaveTo=\"opacity-0\"\n                            >\n                                <div className=\"absolute top-0 right-0 mr-4 pt-4\">\n                                    <button\n                                        type=\"button\"\n                                        className=\"ml-1 flex items-center justify-center h-10 w-10 rounded-full focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500\"\n                                        onClick={() => setMenuVisibility(false)}\n                                    >\n                                        <span className=\"sr-only\">\n                                            Close sidebar\n                                        </span>\n                                        <XIcon\n                                            className=\"h-6 w-6 text-gray-800 dark:text-gray-100\"\n                                            aria-hidden=\"true\"\n                                        />\n                                    </button>\n                                </div>\n                            </Transition.Child>\n                            <div className=\"flex-shrink-0 flex items-center px-4\">\n                                <img\n                                    className=\"h-8 w-auto\"\n                                    src={logo}\n                                    alt={config.APP_NAME}\n                                />\n                            </div>\n                            <nav\n                                className=\"mt-5 flex-shrink-0 h-full divide-y bg-white dark:bg-gray-900 border-r border-gray-200 dark:border-gray-700 overflow-y-auto\"\n                                aria-label=\"Sidebar\"\n                            >\n                                <PerfectScrollbar\n                                    className=\"main-menu-content\"\n                                    options={{wheelPropagation: false}}\n                                >\n                                    <div className=\"px-2 space-y-1\">\n                                        <NavMenuItems\n                                            items={menuData}\n                                            menuData={menuData}\n                                            groupOpen={groupOpen}\n                                            groupActive={groupActive}\n                                            setGroupOpen={setGroupOpen}\n                                            setGroupActive={setGroupActive}\n                                            currentActiveGroup={currentActiveGroup}\n                                            setCurrentActiveGroup={setCurrentActiveGroup}\n                                        />\n                                    </div>\n                                </PerfectScrollbar>\n                            </nav>\n                        </div>\n                    </Transition.Child>\n                    <div className=\"flex-shrink-0 w-14\" aria-hidden=\"true\">\n                        {/** Заглушка, не позволяющая меню схлопываться, чтобы вместить кнопку меню */}\n                    </div>\n                </Dialog>\n            </Transition.Root>\n\n            {/** Десктопное меню */}\n            <div\n                className={classNames(\n                    menuCollapsed ? \"lg:w-20\" : \"lg:w-64\",\n                    \"sidebar-menu relative hidden lg:flex lg:flex-col lg:fixed lg:inset-y-0\"\n                )}\n            >\n                <div className=\"absolute top-0 right-0 mr-4 pt-4\">\n                    <MenuToggler/>\n                </div>\n\n                <div\n                    className=\"flex flex-col flex-grow shadow bg-white dark:bg-gray-900 pt-5 pb-4 overflow-y-auto border-r border-gray-200 dark:border-gray-600\">\n                    <div\n                        className={classNames(\n                            \"flex items-center content-center flex-shrink-0 px-4 h-8\"\n                        )}\n                    >\n                        {!menuCollapsed ? (\n                            <img className=\"h-8 w-auto\" src={logo} alt={config.APP_NAME}/>\n                        ) : null}\n                    </div>\n                    <nav\n                        className=\"mt-5 flex-1 flex flex-col overflow-y-auto\"\n                        aria-label=\"Меню\"\n                    >\n                        <PerfectScrollbar\n                            className=\"main-menu-content\"\n                            options={{wheelPropagation: false}}\n                        >\n                            <div\n                                className={classNames(\n                                    \"px-2 space-y-1\",\n                                    menuCollapsed ? \"justify-center\" : \"\"\n                                )}\n                            >\n                                <NavMenuItems\n                                    items={menuData}\n                                    menuData={menuData}\n                                    groupOpen={groupOpen}\n                                    groupActive={groupActive}\n                                    setGroupOpen={setGroupOpen}\n                                    menuCollapsed={menuCollapsed}\n                                    setGroupActive={setGroupActive}\n                                    currentActiveGroup={currentActiveGroup}\n                                    setCurrentActiveGroup={setCurrentActiveGroup}\n                                /></div>\n                        </PerfectScrollbar>\n                    </nav>\n                </div>\n            </div>\n        </>\n    );\n};\n\nexport default Sidebar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nconst Badge = ({size, color, item, className}) => {\n\n    const BadgeSize = {\n        small: \"px-2.5 py-0.5 text-xs\",\n        large: \"px-3 py-0.5 text-sm\"\n    }\n\n    const BadgeColor = {\n        red: \"bg-red-500/30 text-red-700 dark:text-red-300\",\n        orange: \"bg-orange-500/30 text-orange-700 dark:text-orange-300\",\n        yellow: \"bg-yellow-500/30 text-yellow-700 dark:text-yellow-300\",\n        green: \"bg-green-500/30 text-green-700 dark:text-green-300\",\n        cyan: \"bg-cyan-500/30 text-cyan-700 dark:text-cyan-300\",\n        blue: \"bg-blue-500/30 text-blue-700 dark:text-blue-300\",\n        indigo: \"bg-indigo-500/30 text-indigo-700 dark:text-indigo-300\",\n        pink: \"bg-pink-500/30 text-pink-700 dark:text-pink-300\"\n    }\n\n\n    return (\n        <span\n            className={classNames(\"inline-flex items-center rounded-full font-medium\", BadgeSize[size], BadgeColor[color], className)}>\n        {item}\n      </span>\n    );\n};\n\nBadge.propTypes = {\n    /**  Данные */\n    item: PropTypes.string.isRequired,\n    /**  Размер бейджа */\n    size: PropTypes.oneOf([\"small\", \"large\"]).isRequired,\n    /**  Цвет бейджа */\n    color: PropTypes.oneOf([\"red\", \"orange\", \"yellow\", \"green\", \"cyan\", \"blue\", \"indigo\", \"pink\"]).isRequired,\n    /** Доп. класс/ы для бейджа */\n    className: PropTypes.string\n};\n\nBadge.defaultProps = {\n    size: \"small\",\n    color: \"red\",\n    item: \"Бейдж\",\n    className: \"\"\n};\n\nexport default Badge;","import React, {Fragment} from \"react\";\nimport {Menu, Transition} from \"@headlessui/react\";\nimport {MessageSquare} from \"react-feather\";\nimport {messages} from \"../../../../@mock/SampleData\";\nimport {getInitials} from \"../../../../utils\";\nimport moment from \"moment\";\nimport {Avatar} from \"../../../../components/elements/Avatar\";\nimport Badge from \"../../../../components/elements/Badge\";\nimport {PlusIcon} from \"@heroicons/react/outline\";\n\nconst MessageDropdown = () => {\n    return (\n        <Menu as=\"div\" className=\"relative inline-block text-left ml-4\">\n            <div>\n                <Menu.Button\n                    className=\"messages-dropdown-button bg-white dark:bg-gray-900 p-1 rounded-full text-gray-400 dark:text-gray-500 dark:hover:text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500\">\n                    <MessageSquare className=\"h-6 w-6\" aria-hidden=\"true\"/>\n                </Menu.Button>\n            </div>\n\n            <Transition\n                as={Fragment}\n                enter=\"transition ease-out duration-100\"\n                enterFrom=\"transform opacity-0 scale-95\"\n                enterTo=\"transform opacity-100 scale-100\"\n                leave=\"transition ease-in duration-75\"\n                leaveFrom=\"transform opacity-100 scale-100\"\n                leaveTo=\"transform opacity-0 scale-95\"\n            >\n                <Menu.Items\n                    className=\"dark:border dark:border-gray-700 origin-top-right absolute right-0 mt-2 w-96 rounded-md shadow-lg py-1 bg-white dark:bg-gray-900 ring-1 ring-black ring-opacity-5 focus:outline-none divide-y divide-gray-100 dark:divide-gray-800\">\n                    <div className=\"flex px-4 py-3 items-center justify-between\">\n                        <p className=\"text-base leading-6 font-medium text-gray-600 dark:text-gray-500\">Новые\n                            сообщения</p>\n                        {messages.length > 0\n                            ? <Badge color=\"red\" item={messages.length.toString()}/>\n                            : null}\n                    </div>\n                    {messages.length > 0 ? messages.map((message) => (\n                            <Menu.Item key={message.id}>\n                                {({active}) => (\n                                    <div className=\"flex space-x-3 p-3\">\n                                        <Avatar size=\"6\" avatar={message.user.avatar} name={message.user.fullname} color={message.user.color} />\n                                        <div className=\"flex-1 space-y-1\">\n                                            <div className=\"flex items-center justify-between\">\n                                                <h3 className=\"text-sm font-medium text-gray-800 dark:text-gray-200\">{getInitials(message.user.fullname)}</h3>\n                                                <p className=\"text-sm text-gray-500\">{moment(message.time).fromNow()}</p>\n                                            </div>\n                                            <p className=\"text-sm text-gray-500 line-clamp-2\">\n                                                {message.message}\n                                            </p>\n                                        </div>\n                                    </div>\n                                )}\n                            </Menu.Item>\n                        ))\n                        : <div className=\"text-center p-3\">\n                            <MessageSquare className=\"mx-auto h-12 w-12 text-gray-400\"/>\n                            <h3 className=\"mt-1 text-sm text-gray-500\">Новых сообщений нет</h3>\n                            <div className=\"mt-6\">\n                                <button\n                                    type=\"button\"\n                                    className=\"inline-flex items-center px-4 py-2 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n                                >\n                                    <PlusIcon className=\"-ml-1 mr-2 h-5 w-5\" aria-hidden=\"true\"/>\n                                    Написать сообщение\n                                </button>\n                            </div>\n                        </div>}\n                </Menu.Items>\n            </Transition>\n        </Menu>\n    );\n};\n\nexport default MessageDropdown;","import React, {Fragment, useEffect, useState} from \"react\";\nimport classNames from \"classnames\";\nimport {MenuIcon} from \"@heroicons/react/outline\";\nimport {ChevronDownIcon, SearchIcon} from \"@heroicons/react/solid\";\nimport {Menu, Transition} from \"@headlessui/react\";\nimport {getInitials} from \"../../../utils\";\nimport {Link} from \"react-router-dom\";\nimport {Moon, Sun, ZoomIn, ZoomOut} from \"react-feather\";\nimport {useSkin} from \"../../../utils/Hooks/useSkin\";\nimport {Avatar} from \"../../../components/elements/Avatar\";\nimport MessageDropdown from \"./menu/MessageDropdown\";\nimport {useDispatch} from 'react-redux'\nimport {handleLogout} from '../../../store/authentication';\nimport Skeleton from \"react-loading-skeleton\";\nimport toast from \"react-hot-toast\";\nimport Toast, {toastStyles} from \"../../../components/ui/Toast\";\n\nconst NavBar = (props) => {\n\n    const dispatch = useDispatch()\n\n    const {\n        user,\n        menuCollapsed,\n        setMenuVisibility,\n    } = props;\n\n    /** Хуки */\n    const {skin, setSkin} = useSkin();\n\n    const [fontSize, setFontSize] = useState(1);\n\n    useEffect(() => {\n        /** Получаем тег html */\n        const element = document.getElementsByTagName('html')[0];\n\n        /** Присваиваем стиль с размером шрифта */\n        element.style.fontSize = `${fontSize * 100}%`;\n    }, [fontSize]);\n\n    /** Переключалка темы\n     * @returns {JSX.Element}\n     * @constructor\n     */\n    const ThemeToggler = () => {\n        if (skin === \"dark\") {\n            return <Sun className=\"h-6 w-6\" onClick={() => setSkin(\"light\")}/>;\n        } else {\n            return <Moon className=\"h-6 w-6\" onClick={() => setSkin(\"dark\")}/>;\n        }\n    };\n\n    /** Переключалка размера шрифта\n     * @returns {JSX.Element}\n     * @constructor\n     */\n    const FontToggler = () => {\n        if (fontSize === 1) {\n            return <ZoomIn className=\"h-6 w-6\" onClick={() => setFontSize(1.2)}/>;\n        } else {\n            return <ZoomOut className=\"h-6 w-6\" onClick={() => setFontSize(1)}/>;\n        }\n    };\n\n\n    return (\n        <div\n            className={classNames(menuCollapsed ? \"lg:left-20\" : \"lg:left-64\", \"left-0 fixed top-0 right-0 z-10 flex-shrink-0 flex h-16 shadow bg-white dark:bg-gray-900 border-b border-gray-200 dark:border-gray-700 lg:border-none\")}\n        >\n            <button\n                type=\"button\"\n                className=\"px-4 border-r border-gray-200 dark:border-gray-700 text-gray-400 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-indigo-500 lg:hidden\"\n                onClick={() => setMenuVisibility(true)}\n            >\n                <span className=\"sr-only\">Открыть меню</span>\n                <MenuIcon className=\"h-6 w-6\" aria-hidden=\"true\"/>\n            </button>\n\n            <div className=\"flex-1 px-4 flex justify-end sm:justify-between content-center sm:px-6 lg:px-8\">\n                {/* Поиск */}\n                <div className=\"hidden flex-1 sm:flex px-6 py-3 xl:px-0 content-center\">\n                    <div className=\"w-full\">\n                        <label htmlFor=\"search\" className=\"sr-only\">\n                            Поиск\n                        </label>\n                        <div className=\"search-input mt-1 relative rounded-md shadow-sm\">\n                            <div\n                                className=\"pointer-events-none absolute inset-y-0 left-0 pl-3 flex items-center\">\n                                <SearchIcon\n                                    className=\"h-5 w-5 text-gray-400 dark:text-gray-500\"\n                                    aria-hidden=\"true\"\n                                />\n                            </div>\n                            <input\n                                id=\"search\"\n                                name=\"search\"\n                                className=\"block w-full bg-white dark:bg-gray-900 border border-gray-300 dark:border-gray-600 rounded-md py-2 pl-10 pr-3 text-sm placeholder-gray-500 focus:outline-none focus:text-gray-900 dark:focus:text-gray-400 focus:placeholder-gray-400 focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\"\n                                placeholder=\"Поиск\"\n                                type=\"search\"\n                            />\n                            <div className=\"absolute inset-y-0 right-0 flex items-center\">\n                                <label htmlFor=\"currency\" className=\"sr-only\">\n                                    Разделы поиска\n                                </label>\n                                <select\n                                    id=\"search-type\"\n                                    name=\"search-type\"\n                                    className=\"search-select focus:ring-indigo-500 focus:border-indigo-500 h-full py-0 pl-2 pr-7 border-transparent bg-transparent text-gray-500 sm:text-sm rounded-md\"\n                                >\n                                    <option>Сотрудники</option>\n                                    <option>Входящая почта</option>\n                                    <option>Исходящая почта</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                {/** Правая часть заголовка */}\n                <div className=\"ml-4 flex items-center md:ml-6\">\n                    <button\n                        type=\"button\"\n                        className=\"skin-toggler bg-white dark:bg-gray-900 p-1 rounded-full text-gray-400 dark:text-gray-500 dark:hover:text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                    >\n                                    <span className=\"sr-only\">\n                                        Переключить тему\n                                    </span>\n                        <ThemeToggler\n                            className=\"h-6 w-6\"\n                            aria-hidden=\"true\"\n                        />\n                    </button>\n                    <button\n                        type=\"button\"\n                        className=\"font-toggler ml-4 bg-white dark:bg-gray-900 p-1 rounded-full text-gray-400 dark:text-gray-500 dark:hover:text-gray-400 hover:text-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                    >\n                                    <span className=\"sr-only\">\n                                        Переключить размер шрифта\n                                    </span>\n                        <FontToggler\n                            className=\"h-6 w-6\"\n                            aria-hidden=\"true\"\n                        />\n                    </button>\n\n                    {/** Сообщения */}\n                    <MessageDropdown/>\n\n                    {/** Меню пользователя */}\n                    <Menu as=\"div\" className=\"ml-4 relative\">\n                        <div>\n                            <Menu.Button\n                                className=\"user-dropdown max-w-xs bg-white dark:bg-gray-900 rounded-full flex items-center text-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 lg:p-1 lg:rounded-md lg:hover:bg-gray-50 dark:lg:hover:bg-gray-800\">\n                                {user.fullname\n                                    ? <Avatar size=\"10\" name={user.fullname} avatar={user.avatar}/>\n                                    : <Skeleton\n                                        className=\"bg-gray-500/30 after:bg-gradient-to-r from-gray-400/10 via-gray-500/10 to-gray-400/10\"/>}\n                                <span\n                                    className=\"hidden ml-3 text-gray-700 dark:text-gray-300 text-sm font-medium lg:block\">\n                                                <span className=\"sr-only\">\n                                                    Открыть меню пользователя\n                                                </span>\n                                    {user.fullname\n                                        ? getInitials(user.fullname)\n                                        : <Skeleton\n                                            className=\"bg-gray-500/30 after:bg-gradient-to-r from-gray-400/10 via-gray-500/10 to-gray-400/10\"/>}\n\n                                            </span>\n                                <ChevronDownIcon\n                                    className=\"hidden flex-shrink-0 ml-1 h-5 w-5 text-gray-400 dark:text-gray-500 lg:block\"\n                                    aria-hidden=\"true\"\n                                />\n                            </Menu.Button>\n                        </div>\n                        <Transition\n                            as={Fragment}\n                            enter=\"transition ease-out duration-100\"\n                            enterFrom=\"transform opacity-0 scale-95\"\n                            enterTo=\"transform opacity-100 scale-100\"\n                            leave=\"transition ease-in duration-75\"\n                            leaveFrom=\"transform opacity-100 scale-100\"\n                            leaveTo=\"transform opacity-0 scale-95\"\n                        >\n                            <Menu.Items\n                                className=\"dark:border dark:border-gray-700 origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white dark:bg-gray-900 ring-1 ring-black ring-opacity-5 focus:outline-none divide-y divide-gray-100 dark:divide-gray-800\">\n                                <div className=\"px-4 py-3\">\n                                    <p className=\"text-sm text-gray-700 dark:text-gray-400\">Выполнен вход</p>\n                                    {user.username\n                                        ? <p className=\"text-sm font-medium text-gray-900 dark:text-gray-50 truncate\">{user.username}</p>\n                                        : <Skeleton className=\"bg-gray-500/30 after:bg-gradient-to-r from-gray-400/10 via-gray-500/10 to-gray-400/10\"/>\n                                    }\n\n                                </div>\n                                <div className=\"py-1\">\n                                    <Menu.Item>\n                                        {({active}) => (<Link\n                                            to=\"/myprofile\"\n                                            className={classNames(active ? \"bg-gray-100 dark:bg-gray-700\" : \"\", \"block px-4 py-2 text-sm text-gray-700 dark:text-gray-400\")}\n                                        >\n                                            Мой Профиль\n                                        </Link>)}\n                                    </Menu.Item>\n                                </div>\n                                <div className=\"py-1\">\n                                    <Menu.Item>\n                                        {({active}) => (\n                                            <Link\n                                                to=\"/auth\"\n                                                onClick={() => {\n                                                    dispatch(handleLogout())\n                                                    toast(t => (<Toast t={t} message=\"Вы вышли из системы.\" type=\"success\"/>), {className: toastStyles})\n                                                }}\n                                                className={classNames(active ? \"bg-gray-100 dark:bg-gray-700\" : \"\", \"block px-4 py-2 text-sm text-gray-700 dark:text-gray-400\")}\n                                            >\n                                                Выход\n                                            </Link>)}\n                                    </Menu.Item>\n                                </div>\n                            </Menu.Items>\n                        </Transition>\n                    </Menu>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default NavBar;","import {useEffect} from \"react\"\nimport {handleSkin} from \"../../store/layout\"\nimport {useDispatch, useSelector} from \"react-redux\"\n\n/** Тема из store, ф-я обновляющая тему в store\n * @returns {{skin: (*|string|string), setSkin: setSkin}}\n */\nexport const useSkin = () => {\n    const dispatch = useDispatch();\n    const store = useSelector(state => state.layout);\n\n    /** Записать в store тему */\n    const setSkin = type => {\n        dispatch(handleSkin(type));\n    }\n\n    /** Установка класса темы для body при монтировании */\n    useEffect(() => {\n        /** Получаем тег body */\n        const element = window.document.body;\n\n        /** Названия классов для тем */\n        const classNames = {\n            dark: \"dark\",\n            light: \"light\"\n        }\n\n        /** Удаляем классы тем при монтировании */\n        element.classList.remove(\"dark\", \"light\");\n\n        /** Если тема не светлая, добавляем класс темы из store */\n        element.classList.add(classNames[store.skin])\n    }, [store.skin]);\n\n    return {skin: store.skin, setSkin};\n}\n","import React, {useEffect, useState} from \"react\";\nimport {Outlet, useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {handleMenuCollapsed} from \"../../store/layout\";\nimport ScrollToTop from \"./components/scrolltop\";\nimport classNames from \"classnames\";\nimport Sidebar from \"./components/menu\";\nimport NavBar from \"./components/navbar\";\nimport Skeleton from \"react-loading-skeleton\";\nimport {makeArrayFromObj} from \"../../utils\";\nimport {fetch, setAuthorization} from \"../../utils/Helpers/api_helper\";\nimport {fetchUserData} from \"../../store/userData\";\nimport {handleLogout} from \"../../store/authentication\";\nimport toast from \"react-hot-toast\";\nimport Toast, {toastStyles} from \"../../components/ui/Toast\";\n\n/** Основная раскладка с меню и заголовком\n * @param props\n * @returns {JSX.Element|null}\n * @constructor\n */\nconst MainLayout = (props) => {\n\n    if (localStorage.getItem(\"jwt\")) {\n        setAuthorization(localStorage.getItem(\"jwt\").replace(/['\"]+/g, '').toString())\n    }\n\n    /** Пропсы */\n    const {children} = props;\n\n    /** Стейты */\n    const [isMounted, setIsMounted] = useState(false);\n    const [menuVisibility, setMenuVisibility] = useState(false);\n\n    /** Для серверной навигации */\n    const [menuData, setMenuData] = useState([]);\n\n    /** Переменные */\n    const dispatch = useDispatch();\n    const layoutStore = useSelector((state) => state.layout);\n\n    const userdataStore = useSelector((state) => state.userData);\n    const loginData = userdataStore.userData;\n\n    /** Состояние меню - узкое/широкое*/\n    const menuCollapsed = layoutStore.menuCollapsed;\n\n    /** Включает сворачивание меню */\n    const setMenuCollapsed = (val) => dispatch(handleMenuCollapsed(val));\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        /*setMenuData(navigation);*/\n        /*setUserData(users[0]);*/\n\n        /* Получаем данные вошедшего пользователя */\n        /* TODO этот кусок можно использовать в других местах, где нужна проверка токена */\n        dispatch(fetchUserData())\n            .catch(err => {\n                /** Если получили ошибку 401 - токен невалиден, выкидваем на страницу входа */\n                if (err === \"Request failed with status code 401\") {\n                    dispatch(handleLogout());\n                    navigate(\"/auth\")\n                }\n                /* Показываем всплывашку с ошибкой */\n                toast(t => (<Toast t={t} message={err} type=\"error\"/>), {className: toastStyles})\n            });\n        /* Для серверной навигации - боковое меню */\n        fetch.get(\"/sidebar\", \"\")\n            .then(response => {\n                if (response.data || response.data !== []) {\n                    setMenuData(makeArrayFromObj(response.data))\n                }\n            })\n            .catch(err => {\n                /* Показываем всплывашку с ошибкой */\n                toast(t => (<Toast t={t} message={err} type=\"error\"/>), {className: toastStyles})\n            })\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [dispatch]);\n\n    /** ComponentDidMount */\n    useEffect(() => {\n        setIsMounted(true);\n        return () => setIsMounted(false);\n    }, []);\n\n    if (!isMounted) {\n        return null;\n    }\n\n    return (<>\n        <div className=\"h-full\">\n            {/* Сайдбар меню */}\n            {menuData !== [] ? <Sidebar\n                menuVisibility={menuVisibility}\n                menuData={menuData}\n                setMenuVisibility={setMenuVisibility}\n                menuCollapsed={menuCollapsed}\n                setMenuCollapsed={setMenuCollapsed}\n            /> : <Skeleton count=\"5\"\n                           className=\"bg-gray-500/30 after:bg-gradient-to-r from-gray-400/10 via-gray-500/10 to-gray-400/10\"/>}\n\n            <div\n                className={classNames(menuCollapsed ? \"lg:pl-20 pl-0\" : \"lg:pl-64\", \"h-screen\")}\n            >\n                {/* Заголовок */}\n                <NavBar\n                    user={loginData}\n                    menuCollapsed={menuCollapsed}\n                    setMenuVisibility={setMenuVisibility}\n                />\n\n                {/* Основное содержимое */}\n                <div\n                    className={classNames(menuCollapsed ? \"lg:left-20\" : \"lg:left-64\", \"main-content animate__fadeIn left-0 text-gray-900 dark:text-gray-200 fixed top-16 right-0 bottom-0 overflow-hidden\")}\n                >\n                    {/* Содержимое страницы */}\n                    <Outlet/>\n                    {children}\n                </div>\n            </div>\n            {/* Кнопка назад наверх */}\n            <ScrollToTop showOffset={300}/>\n        </div>\n    </>);\n};\n\nexport default MainLayout;\n","import {Suspense} from \"react\";\nimport {Navigate} from \"react-router-dom\";\n\nconst PublicRoute = ({children, route}) => {\n    const user = JSON.parse(localStorage.getItem(\"jwt\"));\n\n    if (route) {\n\n        let restrictedRoute = false;\n\n        if (route.meta) {\n            restrictedRoute = route.meta.restricted;\n        }\n\n        if (user && restrictedRoute) {\n            return <Navigate to=\"/\"/>\n        }\n    }\n\n    return <Suspense fallback={null}>{children}</Suspense>\n}\n\nexport default PublicRoute\n","import {Navigate} from \"react-router-dom\";\nimport {Suspense} from \"react\";\n\nconst PrivateRoute = ({children, route}) => {\n    const user = JSON.parse(localStorage.getItem(\"jwt\"));\n\n    if (route) {\n\n        let restrictedRoute = false;\n\n        if (route.meta) {\n            restrictedRoute = route.meta.restricted;\n        }\n\n        if (!user) {\n            return <Navigate to=\"/auth\"/>;\n        }\n\n        if (user && restrictedRoute) {\n            return <Navigate to=\"/\"/>;\n        }\n    }\n\n    return <Suspense fallback={null}>{children}</Suspense>\n}\n\nexport default PrivateRoute\n","import React, {Fragment, lazy} from \"react\";\nimport {Navigate} from \"react-router-dom\";\nimport LayoutWrapper from \"../layouts/layout-wrapper\";\n\n/** Раскладки */\nimport BlankLayout from \"../layouts/BlankLayout\";\nimport MainLayout from \"../layouts/MainLayout\";\n\n/** Роутинг */\nimport PublicRoute from \"./PublicRoute\";\nimport PrivateRoute from \"./PrivateRoute\";\nimport {isObjEmpty} from \"../utils\";\n\nconst getLayout = {\n    blank: <BlankLayout/>,\n    main: <MainLayout/>\n}\n\n/** Дефолтный роут */\nconst DefaultRoute = () => {\n    const user = localStorage.getItem(\"jwt\");\n    if (user) {\n        return \"/home\"\n    } else {\n        return \"/auth\"\n    }\n};\n\n/** Импорт страниц */\nconst Home = lazy(() => import(\"../pages/Home\"));\nconst MyInfo = lazy(() => import(\"../pages/MyInfo\"));\nconst MyInfoEdit = lazy(() => import(\"../pages/MyInfoEdit\"));\nconst Staff = lazy(() => import(\"../pages/Staff\"));\nconst Admin = lazy(() => import(\"../pages/Admin\"));\nconst Faq = lazy(() => import(\"../pages/Faq\"));\nconst Grade = lazy(() => import(\"../pages/Grade\"));\nconst Phonebook = lazy(() => import(\"../pages/Phonebook\"));\nconst Proxylist = lazy(() => import(\"../pages/Proxylist\"));\nconst Stat = lazy(() => import(\"../pages/Stat\"));\nconst Test = lazy(() => import(\"../pages/Test\"));\nconst Calendar = lazy(() => import(\"../pages/apps/Calendar\"));\nconst Login = lazy(() => import(\"../pages/auth/Login\"));\nconst Register = lazy(() => import(\"../pages/auth/Register\"));\nconst Error404 = lazy(() => import(\"../pages/misc/Error404\"));\n\n/** Сборка роутов\n * FIXME добавлять роуты сюда\n * */\nconst Routes = [\n    {\n        path: \"/\",\n        index: true,\n        element: <Navigate replace to={DefaultRoute()}/>\n    },\n    {\n        path: \"/home\",\n        element: <Home/>,\n        meta: {\n            publicRoute: false\n        }\n    },\n    {\n        path: \"/admin\",\n        element: <Admin/>,\n        meta: {\n            publicRoute: false\n        }\n    },\n    {\n        path: \"/faq\",\n        element: <Faq/>,\n        meta: {\n            publicRoute: false\n        }\n    },\n    {\n        path: \"/grade\",\n        element: <Grade/>,\n        meta: {\n            publicRoute: false\n        }\n    },\n    {\n        path: \"/phonebook\",\n        element: <Phonebook/>,\n        meta: {\n            publicRoute: false\n        }\n    },\n    {\n        path: \"/proxylist\",\n        element: <Proxylist/>,\n        meta: {\n            publicRoute: false\n        }\n    },\n    {\n        path: \"/stats\",\n        element: <Stat/>,\n        meta: {\n            publicRoute: false\n        }\n    },\n    {\n        path: \"/test\",\n        element: <Test/>,\n        meta: {\n            publicRoute: false\n        }\n    },\n    {\n        path: \"/staff\",\n        element: <Staff/>,\n        meta: {\n            publicRoute: false\n        }\n    },\n    {\n        path: \"/myprofile\",\n        element: <MyInfo/>,\n        meta: {\n            publicRoute: false\n        }\n    },\n    {\n        path: \"/myprofile/edit\",\n        element: <MyInfoEdit/>,\n        meta: {\n            publicRoute: false\n        }\n    },\n    {\n        path: \"/calendar\",\n        element: <Calendar/>,\n        meta: {\n            publicRoute: false\n        }\n    },\n    {\n        path: \"/auth\",\n        element: <Login/>,\n        meta: {\n            layout: \"blank\",\n            publicRoute: true,\n            restricted: true\n        }\n    },\n    {\n        path: \"/reg\",\n        element: <Register/>,\n        meta: {\n            layout: \"blank\",\n            publicRoute: true,\n            restricted: true\n        }\n    },\n    {\n        path: \"*\",\n        element: <Error404/>,\n        children: [{path: \"*\", element: <Error404/>}],\n        meta: {\n            publicRoute: false\n        }\n    }\n]\n\nconst getRouteMeta = route => {\n    if (isObjEmpty(route.element.props)) {\n        if (route.meta) {\n            return {routeMeta: route.meta};\n        } else {\n            return {};\n        }\n    }\n};\n\n/** Возвращает отфильтрованный объект роутов и путей */\nconst MergeLayoutRoutes = (layout, defaultLayout) => {\n    const LayoutRoutes = [];\n\n    if (Routes) {\n        Routes.filter(route => {\n            let isBlank = false;\n            /** Проверяет, раскладку роута или дефолтную раскладку на соответствие текущей раскладки */\n            if (\n                (route.meta && route.meta.layout && route.meta.layout === layout) ||\n                ((route.meta === undefined || route.meta.layout === undefined) && defaultLayout === layout)\n            ) {\n                let RouteTag = PublicRoute;\n\n                /** Проверяет, приватный или общий роут */\n                if (route.meta) {\n                    route.meta.layout === \"blank\" ? (isBlank = true) : (isBlank = false)\n                    RouteTag = route.meta.publicRoute ? PublicRoute : PrivateRoute\n                }\n\n                if (route.element) {\n                    const Wrapper =\n                        // eslint-disable-next-line multiline-ternary\n                        isObjEmpty(route.element.props) && isBlank === false\n                            ? // eslint-disable-next-line multiline-ternary\n                            LayoutWrapper\n                            : Fragment;\n\n                    route.element = (\n                        <Wrapper {...(isBlank === false ? getRouteMeta(route) : {})}>\n                            <RouteTag route={route}>{route.element}</RouteTag>\n                        </Wrapper>\n                    )\n                }\n\n                /** Запись роута в LayoutRoutes */\n                LayoutRoutes.push(route);\n            }\n            return LayoutRoutes;\n        })\n    }\n    return LayoutRoutes;\n};\n\nconst getRoutes = layout => {\n    const defaultLayout = layout || \"main\";\n    const layouts = [\"main\", \"blank\"];\n\n    const AllRoutes = [];\n\n    layouts.forEach(layoutItem => {\n        const LayoutRoutes = MergeLayoutRoutes(layoutItem, defaultLayout);\n\n        AllRoutes.push({\n            path: \"/\",\n            element: getLayout[layoutItem] || getLayout[defaultLayout],\n            children: LayoutRoutes\n        })\n    })\n    return AllRoutes;\n}\n\nexport {DefaultRoute, Routes, getRoutes};\n","import {useDispatch, useSelector} from \"react-redux\";\nimport {handleLastLayout, handleLayout} from \"../../store/layout\";\n\nexport const useLayout = () => {\n    const dispatch = useDispatch();\n    const store = useSelector(state => state.layout);\n\n    const setLayout = value => {\n        dispatch(handleLayout(value));\n    }\n\n    const setLastLayout = value => {\n        dispatch(handleLastLayout(value));\n    }\n\n    return {layout: store.layout, setLayout, lastLayout: store.lastLayout, setLastLayout}\n}\n","import Router from \"./router\";\nimport {getRoutes} from \"./router/allRoutes\";\nimport {Suspense, useEffect, useState} from \"react\";\nimport {useLayout} from \"./utils/Hooks/useLayout\";\nimport \"./scss/App.scss\";\n\nfunction App() {\n    /** Стейт роутов */\n    const [allRoutes, setAllRoutes] = useState([]);\n\n    const {layout} = useLayout();\n\n    /** Получает роуты для раскладки */\n    useEffect(() => {\n        setAllRoutes(getRoutes(layout));\n    }, [layout]);\n\n    return (\n        <Suspense fallback={null}>\n            <Router allRoutes={allRoutes}/>\n        </Suspense>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n/** Круглый аватар с изображением\n * @param item - объект с данными {avatar: аватар, name: имя пользователя}\n * @param size - размер аватара\n * @param classname - доп. класс\n * @returns {JSX.Element}\n * @constructor\n */\nexport const AvatarBasic = ({size, classname, name, avatar}) => {\n\n    /** Размеры аватаров\n     * @type {{\"12\": string, \"14\": string, \"6\": string, \"8\": string, \"10\": string}}\n     */\n    const AvatarGroupSize = {\n        6: \"h-6 w-6\",\n        8: \"h-8 w-8\",\n        10: \"h-10 w-10\",\n        12: \"h-12 w-12\",\n        14: \"h-14 w-14\",\n    }\n\n    return (<>\n        <img\n            className={[\"inline-block rounded-full\", AvatarGroupSize[size], classname].join(\" \")}\n            src={avatar}\n            alt={name}\n        />\n    </>);\n};\n\n/** Типы свойств */\nAvatarBasic.propTypes = {\n    /** Данные */\n    name: PropTypes.string.isRequired,\n    avatar: PropTypes.string.isRequired,\n    /** Размер аватара */\n    size: PropTypes.oneOf([\"6\", \"8\", \"10\", \"12\", \"14\"]).isRequired,\n    /** Доп. класс для аватара */\n    className: PropTypes.string\n};\n\n/** Дефолтные свойства */\nAvatarBasic.defaultProps = {\n    size: \"10\",\n    name: null,\n    avatar: null,\n    className: \"\"\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {AvatarBasic} from \"./AvatarBasic\";\nimport {AvatarCircularWithPlaceholderInitials} from \"./AvatarCircularWithPlaceholderInitials\";\n\nexport const Avatar = ({size, classname, name, avatar, color}) => {\n\n    return (\n        avatar ?\n            <AvatarBasic size={size} name={name} avatar={avatar} className={classname || \"\"}/> :\n            <AvatarCircularWithPlaceholderInitials name={name} size={size} color={color || \"indigo\"}\n                                                   className={classname || \"\"}/>\n    );\n};\n\nAvatar.propTypes = {\n    /** Данные */\n    name: PropTypes.string.isRequired,\n    avatar: PropTypes.string,\n    color: PropTypes.string,\n    /** Размер аватара */\n    size: PropTypes.oneOf([\"6\", \"8\", \"10\", \"12\", \"14\"]).isRequired,\n    /** Доп. класс для аватара */\n    classname: PropTypes.string\n};\n\n\nAvatar.defaultProps = {\n    size: \"10\",\n    name: \"Name\",\n    classname: \"\"\n};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {getInitialsOnly} from \"../../utils\";\n\n/** Круглый аватар с инициалами (без изображения)\n * @param name - полное имя (ФИО)\n * @param size - размер аватара\n * @param color - цвет аватара\n * @param classname - доп. класс/ы\n * @returns {JSX.Element}\n * @constructor\n */\nexport const AvatarCircularWithPlaceholderInitials = ({size, color, classname, name}) => {\n\n    /** Размеры аватаров\n     * @type {{\"12\": {nameFont: string, size: string}, \"14\": {nameFont: string, size: string}, \"6\": {nameFont: string, size: string}, \"8\": {nameFont: string, size: string}, \"10\": {nameFont: string, size: string}}}\n     */\n    const AvatarGroupSize = {\n        6: {\n            nameFont: \"text-xs\",\n            size: \"h-6 w-6\",\n        },\n        8: {\n            nameFont: \"text-sm\",\n            size: \"h-8 w-8\",\n        },\n        10: {\n            nameFont: \"text-base\",\n            size: \"h-10 w-10\",\n        },\n        12: {\n            nameFont: \"text-xl\",\n            size: \"h-12 w-12\",\n        },\n        14: {\n            nameFont: \"text-2xl\",\n            size: \"h-14 w-14\",\n        },\n    }\n\n    /** Цвета аватаров\n     * @type {{red: {bg: string, text: string}, orange: {bg: string, text: string}, pink: {bg: string, text: string}, green: {bg: string, text: string}, blue: {bg: string, text: string}, yellow: {bg: string, text: string}, indigo: {bg: string, text: string}, cyan: {bg: string, text: string}}}\n     */\n    const AvatarColor = {\n        red: {\n            bg: \"bg-red-500/30\",\n            text: \"text-red-700 dark:text-red-300\",\n        },\n        orange: {\n            bg: \"bg-orange-500/30\",\n            text: \"text-orange-700 dark:text-orange-300\",\n        },\n        yellow: {\n            bg: \"bg-yellow-500/30\",\n            text: \"text-yellow-700 dark:text-yellow-300\",\n        },\n        green: {\n            bg: \"bg-green-500/30\",\n            text: \"text-green-700 dark:text-green-300\",\n        },\n        cyan: {\n            bg: \"bg-cyan-500/30\",\n            text: \"text-cyan-700 dark:text-cyan-300\",\n        },\n        blue: {\n            bg: \"bg-blue-500/30\",\n            text: \"text-blue-700 dark:text-blue-300\",\n        },\n        indigo: {\n            bg: \"bg-indigo-500/30\",\n            text: \"text-indigo-700 dark:text-indigo-300\",\n        },\n        pink: {\n            bg: \"bg-pink-500/30\",\n            text: \"text-pink-700 dark:text-pink-300\",\n        },\n    }\n\n    return (<>\n        <span\n            className={\n                [\"inline-flex items-center justify-center rounded-full\", AvatarGroupSize[size].size, AvatarColor[color || \"indigo\"].bg, classname || \"\"].join(\" \")}\n        >\n        <span\n            className={[\"font-medium leading-none\", AvatarGroupSize[size].nameFont, AvatarColor[color || \"indigo\"].text].join(\" \")}\n        >\n            {getInitialsOnly(name)}\n        </span>\n      </span>\n    </>);\n};\n\n/** Типы свойств */\nAvatarCircularWithPlaceholderInitials.propTypes = {\n    /**  Данные */\n    name: PropTypes.string.isRequired,\n    /**  Размер аватара */\n    size: PropTypes.oneOf([\"6\", \"8\", \"10\", \"12\", \"14\"]).isRequired,\n    /**  Цвет аватара */\n    color: PropTypes.oneOf([\"red\", \"orange\", \"yellow\", \"green\", \"cyan\", \"blue\", \"indigo\", \"pink\"]).isRequired,\n    /** Доп. класс/ы для аватара */\n    className: PropTypes.string\n};\n\n/** Дефолтные свойства */\nAvatarCircularWithPlaceholderInitials.defaultProps = {\n    size: \"10\",\n    color: \"red\",\n    name: \"Иванов Иван Иванович\",\n    className: \"\"\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {CheckCircleIcon, ExclamationCircleIcon, XIcon} from \"@heroicons/react/outline\";\nimport toast from \"react-hot-toast\";\n\nexport const toastStyles = \"bg-white dark:bg-gray-800 shadow-lg rounded-lg pointer-events-auto ring-1 ring-black dark:ring-white ring-opacity-5 dark:ring-opacity-5 overflow-hidden\";\n\nconst Toast = ({t, message, type}) => {\n    /** Расшифровка ошибок сервера TODO добавлять ошибки сюда\n     * @type {{\"Request failed with status code 500\": string, \"Request failed with status code 401\": string}}\n     */\n    const serverErrors = {\n        \"Request failed with status code 500\": \"Ошибка 500: Отсутствует подключение к серверу.\",\n        \"Request failed with status code 401\": \"Ошибка 401: Ошибка авторизации.\"\n    }\n\n    /** Типы всплывашек TODO добавлять типы всплывашек сюда\n     * @type {{success: {icon: JSX.Element}, error: {icon: JSX.Element}}}\n     */\n    const toastTypes = {\n        \"error\": {\n            icon: <ExclamationCircleIcon className=\"h-6 w-6 text-red-400\" aria-hidden=\"true\"/>\n        },\n        \"success\": {\n            icon: <CheckCircleIcon className=\"h-6 w-6 text-green-400\" aria-hidden=\"true\"/>\n        }\n    }\n\n    return (\n        <div className=\"flex items-start\">\n            <div className=\"flex-shrink-0\">\n                {toastTypes[type].icon}\n            </div>\n            <div className=\"ml-3 flex-1 pt-0.5\">\n                <p className=\"text-sm font-medium text-gray-700 dark:text-gray-200\">{serverErrors[message] || message}</p>\n            </div>\n            <div className=\"ml-4 flex-shrink-0 flex\">\n                <button\n                    className=\"bg-white dark:bg-gray-900 rounded-md inline-flex text-gray-400 dark:text-gray-500 hover:text-gray-500 dark:hover:text-gray-400 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n                    onClick={() => toast.dismiss(t.id)}\n                >\n                    <span className=\"sr-only\">Закрыть</span>\n                    <XIcon className=\"h-5 w-5\" aria-hidden=\"true\"/>\n                </button>\n            </div>\n        </div>\n    )\n};\n\nToast.propTypes = {\n    /** Сообщение, либо код ошибки из промиса */\n    message: PropTypes.string.isRequired,\n    /** Тип всплывашки */\n    type: PropTypes.oneOf([\"error\", \"success\"]).isRequired\n};\n\nToast.defaultProps = {\n    message: \"Внимание\",\n    type: \"error\"\n};\n\nexport default Toast;"],"names":["allRoutes","useRoutes","LayoutWrapper","props","children","routeMeta","dispatch","useDispatch","layoutStored","appLayoutCondition","layout","appLayout","Tag","Fragment","useEffect","menuCollapsed","handleMenuCollapsed","className","memo","useState","isMounted","setIsMounted","ScrollTop","showOffset","scrollBehaviour","rest","visible","setVisible","window","addEventListener","pageYOffset","onClick","scroll","top","behavior","size","defaultProps","item","activeItem","setActiveItem","location","useLocation","currentURL","pathname","to","alias","classNames","undefined","e","length","disabled","preventDefault","icon","badgeColor","pagetitle","id","hasActiveChild","currentUrl","makeArrayFromObj","child","includes","removeChildren","openGroup","currentActiveGroup","forEach","index","indexOf","splice","groupOpen","parentItem","groupActive","setGroupOpen","setGroupActive","setCurrentActiveGroup","onCollapseClick","parent","activeGroup","push","toggleOpenGroup","href","open","xmlns","viewBox","fill","fillRule","d","clipRule","items","header","Components","NavMenuLink","NavMenuGroup","NavMenuSectionHeader","map","TagName","resolveNavItemComponent","menuData","menuVisibility","setMenuVisibility","setMenuCollapsed","MenuToggler","show","as","onClose","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","type","XIcon","src","logo","alt","config","options","wheelPropagation","NavMenuItems","Badge","color","small","large","red","orange","yellow","green","cyan","blue","indigo","pink","messages","message","active","Avatar","avatar","user","name","fullname","getInitials","moment","time","fromNow","PlusIcon","store","useSelector","state","element","document","body","classList","remove","add","dark","light","skin","setSkin","handleSkin","useSkin","fontSize","setFontSize","getElementsByTagName","style","ThemeToggler","FontToggler","Z","MenuIcon","htmlFor","SearchIcon","placeholder","ChevronDownIcon","username","handleLogout","toast","t","Toast","toastStyles","localStorage","getItem","setAuthorization","replace","toString","setMenuData","layoutStore","loginData","userData","navigate","useNavigate","fetchUserData","catch","err","fetch","then","response","data","val","count","route","JSON","parse","restrictedRoute","meta","restricted","Suspense","fallback","getLayout","blank","main","Home","lazy","MyInfo","MyInfoEdit","Staff","Admin","Faq","Grade","Phonebook","Proxylist","Stat","Test","Calendar","Login","Register","Error404","Routes","path","publicRoute","MergeLayoutRoutes","defaultLayout","LayoutRoutes","filter","isBlank","RouteTag","PublicRoute","PrivateRoute","Wrapper","isObjEmpty","getRouteMeta","useLayout","setLayout","value","handleLayout","lastLayout","setLastLayout","handleLastLayout","setAllRoutes","AllRoutes","layoutItem","getRoutes","AvatarBasic","classname","join","AvatarCircularWithPlaceholderInitials","AvatarGroupSize","nameFont","AvatarColor","bg","text","getInitialsOnly","toastTypes"],"sourceRoot":""}